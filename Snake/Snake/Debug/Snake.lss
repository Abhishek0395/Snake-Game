
Snake.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000012f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  000012f8  0000138c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000196  0080007c  0080007c  000013a8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000013a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000013d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00001414  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b15  00000000  00000000  0000150c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007a3  00000000  00000000  00003021  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dc2  00000000  00000000  000037c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000354  00000000  00000000  00004588  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d6  00000000  00000000  000048dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000140d  00000000  00000000  00004db2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  000061bf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 6a 03 	jmp	0x6d4	; 0x6d4 <__vector_1>
       8:	0c 94 15 03 	jmp	0x62a	; 0x62a <__vector_2>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <update+0x114>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__vector_2+0x70>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <pinChange+0x240>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <pinChange+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e8 ef       	ldi	r30, 0xF8	; 248
     162:	f2 e1       	ldi	r31, 0x12	; 18
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	ac 37       	cpi	r26, 0x7C	; 124
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	22 e0       	ldi	r18, 0x02	; 2
     172:	ac e7       	ldi	r26, 0x7C	; 124
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a2 31       	cpi	r26, 0x12	; 18
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 52 06 	call	0xca4	; 0xca4 <main>
     184:	0c 94 7a 09 	jmp	0x12f4	; 0x12f4 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
     18c:	67 2b       	or	r22, r23
     18e:	09 f0       	breq	.+2      	; 0x192 <pinChange+0x6>
     190:	9f c0       	rjmp	.+318    	; 0x2d0 <pinChange+0x144>
     192:	00 97       	sbiw	r24, 0x00	; 0
     194:	11 f4       	brne	.+4      	; 0x19a <pinChange+0xe>
     196:	d8 98       	cbi	0x1b, 0	; 27
     198:	08 95       	ret
     19a:	81 30       	cpi	r24, 0x01	; 1
     19c:	91 05       	cpc	r25, r1
     19e:	11 f4       	brne	.+4      	; 0x1a4 <pinChange+0x18>
     1a0:	d9 98       	cbi	0x1b, 1	; 27
     1a2:	08 95       	ret
     1a4:	82 30       	cpi	r24, 0x02	; 2
     1a6:	91 05       	cpc	r25, r1
     1a8:	11 f4       	brne	.+4      	; 0x1ae <pinChange+0x22>
     1aa:	da 98       	cbi	0x1b, 2	; 27
     1ac:	08 95       	ret
     1ae:	83 30       	cpi	r24, 0x03	; 3
     1b0:	91 05       	cpc	r25, r1
     1b2:	11 f4       	brne	.+4      	; 0x1b8 <pinChange+0x2c>
     1b4:	db 98       	cbi	0x1b, 3	; 27
     1b6:	08 95       	ret
     1b8:	84 30       	cpi	r24, 0x04	; 4
     1ba:	91 05       	cpc	r25, r1
     1bc:	11 f4       	brne	.+4      	; 0x1c2 <pinChange+0x36>
     1be:	dc 98       	cbi	0x1b, 4	; 27
     1c0:	08 95       	ret
     1c2:	85 30       	cpi	r24, 0x05	; 5
     1c4:	91 05       	cpc	r25, r1
     1c6:	11 f4       	brne	.+4      	; 0x1cc <pinChange+0x40>
     1c8:	dd 98       	cbi	0x1b, 5	; 27
     1ca:	08 95       	ret
     1cc:	86 30       	cpi	r24, 0x06	; 6
     1ce:	91 05       	cpc	r25, r1
     1d0:	11 f4       	brne	.+4      	; 0x1d6 <pinChange+0x4a>
     1d2:	de 98       	cbi	0x1b, 6	; 27
     1d4:	08 95       	ret
     1d6:	87 30       	cpi	r24, 0x07	; 7
     1d8:	91 05       	cpc	r25, r1
     1da:	11 f4       	brne	.+4      	; 0x1e0 <pinChange+0x54>
     1dc:	df 98       	cbi	0x1b, 7	; 27
     1de:	08 95       	ret
     1e0:	8a 30       	cpi	r24, 0x0A	; 10
     1e2:	91 05       	cpc	r25, r1
     1e4:	11 f4       	brne	.+4      	; 0x1ea <pinChange+0x5e>
     1e6:	c0 98       	cbi	0x18, 0	; 24
     1e8:	08 95       	ret
     1ea:	8b 30       	cpi	r24, 0x0B	; 11
     1ec:	91 05       	cpc	r25, r1
     1ee:	11 f4       	brne	.+4      	; 0x1f4 <pinChange+0x68>
     1f0:	c1 98       	cbi	0x18, 1	; 24
     1f2:	08 95       	ret
     1f4:	8c 30       	cpi	r24, 0x0C	; 12
     1f6:	91 05       	cpc	r25, r1
     1f8:	11 f4       	brne	.+4      	; 0x1fe <pinChange+0x72>
     1fa:	c2 98       	cbi	0x18, 2	; 24
     1fc:	08 95       	ret
     1fe:	8d 30       	cpi	r24, 0x0D	; 13
     200:	91 05       	cpc	r25, r1
     202:	11 f4       	brne	.+4      	; 0x208 <pinChange+0x7c>
     204:	c3 98       	cbi	0x18, 3	; 24
     206:	08 95       	ret
     208:	8e 30       	cpi	r24, 0x0E	; 14
     20a:	91 05       	cpc	r25, r1
     20c:	11 f4       	brne	.+4      	; 0x212 <pinChange+0x86>
     20e:	c4 98       	cbi	0x18, 4	; 24
     210:	08 95       	ret
     212:	8f 30       	cpi	r24, 0x0F	; 15
     214:	91 05       	cpc	r25, r1
     216:	11 f4       	brne	.+4      	; 0x21c <pinChange+0x90>
     218:	c5 98       	cbi	0x18, 5	; 24
     21a:	08 95       	ret
     21c:	80 31       	cpi	r24, 0x10	; 16
     21e:	91 05       	cpc	r25, r1
     220:	11 f4       	brne	.+4      	; 0x226 <pinChange+0x9a>
     222:	c6 98       	cbi	0x18, 6	; 24
     224:	08 95       	ret
     226:	81 31       	cpi	r24, 0x11	; 17
     228:	91 05       	cpc	r25, r1
     22a:	11 f4       	brne	.+4      	; 0x230 <pinChange+0xa4>
     22c:	c7 98       	cbi	0x18, 7	; 24
     22e:	08 95       	ret
     230:	84 31       	cpi	r24, 0x14	; 20
     232:	91 05       	cpc	r25, r1
     234:	11 f4       	brne	.+4      	; 0x23a <pinChange+0xae>
     236:	a8 98       	cbi	0x15, 0	; 21
     238:	08 95       	ret
     23a:	85 31       	cpi	r24, 0x15	; 21
     23c:	91 05       	cpc	r25, r1
     23e:	11 f4       	brne	.+4      	; 0x244 <pinChange+0xb8>
     240:	a9 98       	cbi	0x15, 1	; 21
     242:	08 95       	ret
     244:	86 31       	cpi	r24, 0x16	; 22
     246:	91 05       	cpc	r25, r1
     248:	11 f4       	brne	.+4      	; 0x24e <pinChange+0xc2>
     24a:	aa 98       	cbi	0x15, 2	; 21
     24c:	08 95       	ret
     24e:	87 31       	cpi	r24, 0x17	; 23
     250:	91 05       	cpc	r25, r1
     252:	11 f4       	brne	.+4      	; 0x258 <pinChange+0xcc>
     254:	ab 98       	cbi	0x15, 3	; 21
     256:	08 95       	ret
     258:	88 31       	cpi	r24, 0x18	; 24
     25a:	91 05       	cpc	r25, r1
     25c:	11 f4       	brne	.+4      	; 0x262 <pinChange+0xd6>
     25e:	ac 98       	cbi	0x15, 4	; 21
     260:	08 95       	ret
     262:	89 31       	cpi	r24, 0x19	; 25
     264:	91 05       	cpc	r25, r1
     266:	11 f4       	brne	.+4      	; 0x26c <pinChange+0xe0>
     268:	ad 98       	cbi	0x15, 5	; 21
     26a:	08 95       	ret
     26c:	8a 31       	cpi	r24, 0x1A	; 26
     26e:	91 05       	cpc	r25, r1
     270:	11 f4       	brne	.+4      	; 0x276 <pinChange+0xea>
     272:	ae 98       	cbi	0x15, 6	; 21
     274:	08 95       	ret
     276:	8b 31       	cpi	r24, 0x1B	; 27
     278:	91 05       	cpc	r25, r1
     27a:	11 f4       	brne	.+4      	; 0x280 <pinChange+0xf4>
     27c:	af 98       	cbi	0x15, 7	; 21
     27e:	08 95       	ret
     280:	8e 31       	cpi	r24, 0x1E	; 30
     282:	91 05       	cpc	r25, r1
     284:	11 f4       	brne	.+4      	; 0x28a <pinChange+0xfe>
     286:	90 98       	cbi	0x12, 0	; 18
     288:	08 95       	ret
     28a:	8f 31       	cpi	r24, 0x1F	; 31
     28c:	91 05       	cpc	r25, r1
     28e:	11 f4       	brne	.+4      	; 0x294 <pinChange+0x108>
     290:	91 98       	cbi	0x12, 1	; 18
     292:	08 95       	ret
     294:	80 32       	cpi	r24, 0x20	; 32
     296:	91 05       	cpc	r25, r1
     298:	11 f4       	brne	.+4      	; 0x29e <pinChange+0x112>
     29a:	92 98       	cbi	0x12, 2	; 18
     29c:	08 95       	ret
     29e:	81 32       	cpi	r24, 0x21	; 33
     2a0:	91 05       	cpc	r25, r1
     2a2:	11 f4       	brne	.+4      	; 0x2a8 <pinChange+0x11c>
     2a4:	93 98       	cbi	0x12, 3	; 18
     2a6:	08 95       	ret
     2a8:	82 32       	cpi	r24, 0x22	; 34
     2aa:	91 05       	cpc	r25, r1
     2ac:	11 f4       	brne	.+4      	; 0x2b2 <pinChange+0x126>
     2ae:	94 98       	cbi	0x12, 4	; 18
     2b0:	08 95       	ret
     2b2:	83 32       	cpi	r24, 0x23	; 35
     2b4:	91 05       	cpc	r25, r1
     2b6:	11 f4       	brne	.+4      	; 0x2bc <pinChange+0x130>
     2b8:	95 98       	cbi	0x12, 5	; 18
     2ba:	08 95       	ret
     2bc:	84 32       	cpi	r24, 0x24	; 36
     2be:	91 05       	cpc	r25, r1
     2c0:	11 f4       	brne	.+4      	; 0x2c6 <pinChange+0x13a>
     2c2:	96 98       	cbi	0x12, 6	; 18
     2c4:	08 95       	ret
     2c6:	85 97       	sbiw	r24, 0x25	; 37
     2c8:	09 f0       	breq	.+2      	; 0x2cc <pinChange+0x140>
     2ca:	9f c0       	rjmp	.+318    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     2cc:	97 98       	cbi	0x12, 7	; 18
     2ce:	08 95       	ret
     2d0:	00 97       	sbiw	r24, 0x00	; 0
     2d2:	11 f4       	brne	.+4      	; 0x2d8 <pinChange+0x14c>
     2d4:	d8 9a       	sbi	0x1b, 0	; 27
     2d6:	08 95       	ret
     2d8:	81 30       	cpi	r24, 0x01	; 1
     2da:	91 05       	cpc	r25, r1
     2dc:	11 f4       	brne	.+4      	; 0x2e2 <pinChange+0x156>
     2de:	d9 9a       	sbi	0x1b, 1	; 27
     2e0:	08 95       	ret
     2e2:	82 30       	cpi	r24, 0x02	; 2
     2e4:	91 05       	cpc	r25, r1
     2e6:	11 f4       	brne	.+4      	; 0x2ec <pinChange+0x160>
     2e8:	da 9a       	sbi	0x1b, 2	; 27
     2ea:	08 95       	ret
     2ec:	83 30       	cpi	r24, 0x03	; 3
     2ee:	91 05       	cpc	r25, r1
     2f0:	11 f4       	brne	.+4      	; 0x2f6 <pinChange+0x16a>
     2f2:	db 9a       	sbi	0x1b, 3	; 27
     2f4:	08 95       	ret
     2f6:	84 30       	cpi	r24, 0x04	; 4
     2f8:	91 05       	cpc	r25, r1
     2fa:	11 f4       	brne	.+4      	; 0x300 <pinChange+0x174>
     2fc:	dc 9a       	sbi	0x1b, 4	; 27
     2fe:	08 95       	ret
     300:	85 30       	cpi	r24, 0x05	; 5
     302:	91 05       	cpc	r25, r1
     304:	11 f4       	brne	.+4      	; 0x30a <pinChange+0x17e>
     306:	dd 9a       	sbi	0x1b, 5	; 27
     308:	08 95       	ret
     30a:	86 30       	cpi	r24, 0x06	; 6
     30c:	91 05       	cpc	r25, r1
     30e:	11 f4       	brne	.+4      	; 0x314 <pinChange+0x188>
     310:	de 9a       	sbi	0x1b, 6	; 27
     312:	08 95       	ret
     314:	87 30       	cpi	r24, 0x07	; 7
     316:	91 05       	cpc	r25, r1
     318:	11 f4       	brne	.+4      	; 0x31e <pinChange+0x192>
     31a:	df 9a       	sbi	0x1b, 7	; 27
     31c:	08 95       	ret
     31e:	8a 30       	cpi	r24, 0x0A	; 10
     320:	91 05       	cpc	r25, r1
     322:	11 f4       	brne	.+4      	; 0x328 <pinChange+0x19c>
     324:	c0 9a       	sbi	0x18, 0	; 24
     326:	08 95       	ret
     328:	8b 30       	cpi	r24, 0x0B	; 11
     32a:	91 05       	cpc	r25, r1
     32c:	11 f4       	brne	.+4      	; 0x332 <pinChange+0x1a6>
     32e:	c1 9a       	sbi	0x18, 1	; 24
     330:	08 95       	ret
     332:	8c 30       	cpi	r24, 0x0C	; 12
     334:	91 05       	cpc	r25, r1
     336:	11 f4       	brne	.+4      	; 0x33c <pinChange+0x1b0>
     338:	c2 9a       	sbi	0x18, 2	; 24
     33a:	08 95       	ret
     33c:	8d 30       	cpi	r24, 0x0D	; 13
     33e:	91 05       	cpc	r25, r1
     340:	11 f4       	brne	.+4      	; 0x346 <pinChange+0x1ba>
     342:	c3 9a       	sbi	0x18, 3	; 24
     344:	08 95       	ret
     346:	8e 30       	cpi	r24, 0x0E	; 14
     348:	91 05       	cpc	r25, r1
     34a:	11 f4       	brne	.+4      	; 0x350 <pinChange+0x1c4>
     34c:	c4 9a       	sbi	0x18, 4	; 24
     34e:	08 95       	ret
     350:	8f 30       	cpi	r24, 0x0F	; 15
     352:	91 05       	cpc	r25, r1
     354:	11 f4       	brne	.+4      	; 0x35a <pinChange+0x1ce>
     356:	c5 9a       	sbi	0x18, 5	; 24
     358:	08 95       	ret
     35a:	80 31       	cpi	r24, 0x10	; 16
     35c:	91 05       	cpc	r25, r1
     35e:	11 f4       	brne	.+4      	; 0x364 <pinChange+0x1d8>
     360:	c6 9a       	sbi	0x18, 6	; 24
     362:	08 95       	ret
     364:	81 31       	cpi	r24, 0x11	; 17
     366:	91 05       	cpc	r25, r1
     368:	11 f4       	brne	.+4      	; 0x36e <pinChange+0x1e2>
     36a:	c7 9a       	sbi	0x18, 7	; 24
     36c:	08 95       	ret
     36e:	84 31       	cpi	r24, 0x14	; 20
     370:	91 05       	cpc	r25, r1
     372:	11 f4       	brne	.+4      	; 0x378 <pinChange+0x1ec>
     374:	a8 9a       	sbi	0x15, 0	; 21
     376:	08 95       	ret
     378:	85 31       	cpi	r24, 0x15	; 21
     37a:	91 05       	cpc	r25, r1
     37c:	11 f4       	brne	.+4      	; 0x382 <pinChange+0x1f6>
     37e:	a9 9a       	sbi	0x15, 1	; 21
     380:	08 95       	ret
     382:	86 31       	cpi	r24, 0x16	; 22
     384:	91 05       	cpc	r25, r1
     386:	11 f4       	brne	.+4      	; 0x38c <pinChange+0x200>
     388:	aa 9a       	sbi	0x15, 2	; 21
     38a:	08 95       	ret
     38c:	87 31       	cpi	r24, 0x17	; 23
     38e:	91 05       	cpc	r25, r1
     390:	11 f4       	brne	.+4      	; 0x396 <pinChange+0x20a>
     392:	ab 9a       	sbi	0x15, 3	; 21
     394:	08 95       	ret
     396:	88 31       	cpi	r24, 0x18	; 24
     398:	91 05       	cpc	r25, r1
     39a:	11 f4       	brne	.+4      	; 0x3a0 <pinChange+0x214>
     39c:	ac 9a       	sbi	0x15, 4	; 21
     39e:	08 95       	ret
     3a0:	89 31       	cpi	r24, 0x19	; 25
     3a2:	91 05       	cpc	r25, r1
     3a4:	11 f4       	brne	.+4      	; 0x3aa <pinChange+0x21e>
     3a6:	ad 9a       	sbi	0x15, 5	; 21
     3a8:	08 95       	ret
     3aa:	8a 31       	cpi	r24, 0x1A	; 26
     3ac:	91 05       	cpc	r25, r1
     3ae:	11 f4       	brne	.+4      	; 0x3b4 <pinChange+0x228>
     3b0:	ae 9a       	sbi	0x15, 6	; 21
     3b2:	08 95       	ret
     3b4:	8b 31       	cpi	r24, 0x1B	; 27
     3b6:	91 05       	cpc	r25, r1
     3b8:	11 f4       	brne	.+4      	; 0x3be <pinChange+0x232>
     3ba:	af 9a       	sbi	0x15, 7	; 21
     3bc:	08 95       	ret
     3be:	8e 31       	cpi	r24, 0x1E	; 30
     3c0:	91 05       	cpc	r25, r1
     3c2:	11 f4       	brne	.+4      	; 0x3c8 <pinChange+0x23c>
     3c4:	90 9a       	sbi	0x12, 0	; 18
     3c6:	08 95       	ret
     3c8:	8f 31       	cpi	r24, 0x1F	; 31
     3ca:	91 05       	cpc	r25, r1
     3cc:	11 f4       	brne	.+4      	; 0x3d2 <pinChange+0x246>
     3ce:	91 9a       	sbi	0x12, 1	; 18
     3d0:	08 95       	ret
     3d2:	80 32       	cpi	r24, 0x20	; 32
     3d4:	91 05       	cpc	r25, r1
     3d6:	11 f4       	brne	.+4      	; 0x3dc <pinChange+0x250>
     3d8:	92 9a       	sbi	0x12, 2	; 18
     3da:	08 95       	ret
     3dc:	81 32       	cpi	r24, 0x21	; 33
     3de:	91 05       	cpc	r25, r1
     3e0:	11 f4       	brne	.+4      	; 0x3e6 <pinChange+0x25a>
     3e2:	93 9a       	sbi	0x12, 3	; 18
     3e4:	08 95       	ret
     3e6:	82 32       	cpi	r24, 0x22	; 34
     3e8:	91 05       	cpc	r25, r1
     3ea:	11 f4       	brne	.+4      	; 0x3f0 <pinChange+0x264>
     3ec:	94 9a       	sbi	0x12, 4	; 18
     3ee:	08 95       	ret
     3f0:	83 32       	cpi	r24, 0x23	; 35
     3f2:	91 05       	cpc	r25, r1
     3f4:	11 f4       	brne	.+4      	; 0x3fa <pinChange+0x26e>
     3f6:	95 9a       	sbi	0x12, 5	; 18
     3f8:	08 95       	ret
     3fa:	84 32       	cpi	r24, 0x24	; 36
     3fc:	91 05       	cpc	r25, r1
     3fe:	11 f4       	brne	.+4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     400:	96 9a       	sbi	0x12, 6	; 18
     402:	08 95       	ret
     404:	85 97       	sbiw	r24, 0x25	; 37
     406:	09 f4       	brne	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     408:	97 9a       	sbi	0x12, 7	; 18
     40a:	08 95       	ret

0000040c <Lcd4_Port>:
     40c:	cf 93       	push	r28
     40e:	c8 2f       	mov	r28, r24
     410:	80 ff       	sbrs	r24, 0
     412:	07 c0       	rjmp	.+14     	; 0x422 <Lcd4_Port+0x16>
     414:	61 e0       	ldi	r22, 0x01	; 1
     416:	70 e0       	ldi	r23, 0x00	; 0
     418:	88 e1       	ldi	r24, 0x18	; 24
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     420:	06 c0       	rjmp	.+12     	; 0x42e <Lcd4_Port+0x22>
     422:	60 e0       	ldi	r22, 0x00	; 0
     424:	70 e0       	ldi	r23, 0x00	; 0
     426:	88 e1       	ldi	r24, 0x18	; 24
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     42e:	c1 ff       	sbrs	r28, 1
     430:	07 c0       	rjmp	.+14     	; 0x440 <Lcd4_Port+0x34>
     432:	61 e0       	ldi	r22, 0x01	; 1
     434:	70 e0       	ldi	r23, 0x00	; 0
     436:	89 e1       	ldi	r24, 0x19	; 25
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     43e:	06 c0       	rjmp	.+12     	; 0x44c <Lcd4_Port+0x40>
     440:	60 e0       	ldi	r22, 0x00	; 0
     442:	70 e0       	ldi	r23, 0x00	; 0
     444:	89 e1       	ldi	r24, 0x19	; 25
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     44c:	c2 ff       	sbrs	r28, 2
     44e:	07 c0       	rjmp	.+14     	; 0x45e <Lcd4_Port+0x52>
     450:	61 e0       	ldi	r22, 0x01	; 1
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	8a e1       	ldi	r24, 0x1A	; 26
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     45c:	06 c0       	rjmp	.+12     	; 0x46a <Lcd4_Port+0x5e>
     45e:	60 e0       	ldi	r22, 0x00	; 0
     460:	70 e0       	ldi	r23, 0x00	; 0
     462:	8a e1       	ldi	r24, 0x1A	; 26
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     46a:	c3 ff       	sbrs	r28, 3
     46c:	07 c0       	rjmp	.+14     	; 0x47c <Lcd4_Port+0x70>
     46e:	61 e0       	ldi	r22, 0x01	; 1
     470:	70 e0       	ldi	r23, 0x00	; 0
     472:	8b e1       	ldi	r24, 0x1B	; 27
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     47a:	06 c0       	rjmp	.+12     	; 0x488 <Lcd4_Port+0x7c>
     47c:	60 e0       	ldi	r22, 0x00	; 0
     47e:	70 e0       	ldi	r23, 0x00	; 0
     480:	8b e1       	ldi	r24, 0x1B	; 27
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     488:	cf 91       	pop	r28
     48a:	08 95       	ret

0000048c <Lcd4_Cmd>:
     48c:	cf 93       	push	r28
     48e:	c8 2f       	mov	r28, r24
     490:	60 e0       	ldi	r22, 0x00	; 0
     492:	70 e0       	ldi	r23, 0x00	; 0
     494:	86 e1       	ldi	r24, 0x16	; 22
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     49c:	8c 2f       	mov	r24, r28
     49e:	0e 94 06 02 	call	0x40c	; 0x40c <Lcd4_Port>
     4a2:	61 e0       	ldi	r22, 0x01	; 1
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	87 e1       	ldi	r24, 0x17	; 23
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     4ae:	89 ef       	ldi	r24, 0xF9	; 249
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	01 97       	sbiw	r24, 0x01	; 1
     4b4:	f1 f7       	brne	.-4      	; 0x4b2 <Lcd4_Cmd+0x26>
     4b6:	00 c0       	rjmp	.+0      	; 0x4b8 <Lcd4_Cmd+0x2c>
     4b8:	00 00       	nop
     4ba:	60 e0       	ldi	r22, 0x00	; 0
     4bc:	70 e0       	ldi	r23, 0x00	; 0
     4be:	87 e1       	ldi	r24, 0x17	; 23
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     4c6:	89 ef       	ldi	r24, 0xF9	; 249
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	01 97       	sbiw	r24, 0x01	; 1
     4cc:	f1 f7       	brne	.-4      	; 0x4ca <Lcd4_Cmd+0x3e>
     4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <Lcd4_Cmd+0x44>
     4d0:	00 00       	nop
     4d2:	cf 91       	pop	r28
     4d4:	08 95       	ret

000004d6 <Lcd4_Clear>:
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     4dc:	81 e0       	ldi	r24, 0x01	; 1
     4de:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     4e2:	08 95       	ret

000004e4 <Lcd4_Set_Cursor>:
     4e4:	cf 93       	push	r28
     4e6:	c6 2f       	mov	r28, r22
     4e8:	81 30       	cpi	r24, 0x01	; 1
     4ea:	59 f4       	brne	.+22     	; 0x502 <Lcd4_Set_Cursor+0x1e>
     4ec:	80 e8       	ldi	r24, 0x80	; 128
     4ee:	86 0f       	add	r24, r22
     4f0:	82 95       	swap	r24
     4f2:	8f 70       	andi	r24, 0x0F	; 15
     4f4:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     4f8:	8c 2f       	mov	r24, r28
     4fa:	8f 70       	andi	r24, 0x0F	; 15
     4fc:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     500:	0c c0       	rjmp	.+24     	; 0x51a <Lcd4_Set_Cursor+0x36>
     502:	82 30       	cpi	r24, 0x02	; 2
     504:	51 f4       	brne	.+20     	; 0x51a <Lcd4_Set_Cursor+0x36>
     506:	80 ec       	ldi	r24, 0xC0	; 192
     508:	86 0f       	add	r24, r22
     50a:	82 95       	swap	r24
     50c:	8f 70       	andi	r24, 0x0F	; 15
     50e:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     512:	8c 2f       	mov	r24, r28
     514:	8f 70       	andi	r24, 0x0F	; 15
     516:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     51a:	cf 91       	pop	r28
     51c:	08 95       	ret

0000051e <Lcd4_Init>:
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	0e 94 06 02 	call	0x40c	; 0x40c <Lcd4_Port>
     524:	87 e8       	ldi	r24, 0x87	; 135
     526:	93 e1       	ldi	r25, 0x13	; 19
     528:	01 97       	sbiw	r24, 0x01	; 1
     52a:	f1 f7       	brne	.-4      	; 0x528 <Lcd4_Init+0xa>
     52c:	00 c0       	rjmp	.+0      	; 0x52e <Lcd4_Init+0x10>
     52e:	00 00       	nop
     530:	83 e0       	ldi	r24, 0x03	; 3
     532:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     536:	81 ee       	ldi	r24, 0xE1	; 225
     538:	94 e0       	ldi	r25, 0x04	; 4
     53a:	01 97       	sbiw	r24, 0x01	; 1
     53c:	f1 f7       	brne	.-4      	; 0x53a <Lcd4_Init+0x1c>
     53e:	00 c0       	rjmp	.+0      	; 0x540 <Lcd4_Init+0x22>
     540:	00 00       	nop
     542:	83 e0       	ldi	r24, 0x03	; 3
     544:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     548:	8d eb       	ldi	r24, 0xBD	; 189
     54a:	9a e0       	ldi	r25, 0x0A	; 10
     54c:	01 97       	sbiw	r24, 0x01	; 1
     54e:	f1 f7       	brne	.-4      	; 0x54c <Lcd4_Init+0x2e>
     550:	00 c0       	rjmp	.+0      	; 0x552 <Lcd4_Init+0x34>
     552:	00 00       	nop
     554:	83 e0       	ldi	r24, 0x03	; 3
     556:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     55a:	82 e0       	ldi	r24, 0x02	; 2
     55c:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     560:	82 e0       	ldi	r24, 0x02	; 2
     562:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     566:	88 e0       	ldi	r24, 0x08	; 8
     568:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     572:	8c e0       	ldi	r24, 0x0C	; 12
     574:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     578:	80 e0       	ldi	r24, 0x00	; 0
     57a:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     57e:	86 e0       	ldi	r24, 0x06	; 6
     580:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     584:	08 95       	ret

00000586 <Lcd4_Write_Char>:
     586:	cf 93       	push	r28
     588:	c8 2f       	mov	r28, r24
     58a:	61 e0       	ldi	r22, 0x01	; 1
     58c:	70 e0       	ldi	r23, 0x00	; 0
     58e:	86 e1       	ldi	r24, 0x16	; 22
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     596:	8c 2f       	mov	r24, r28
     598:	82 95       	swap	r24
     59a:	8f 70       	andi	r24, 0x0F	; 15
     59c:	0e 94 06 02 	call	0x40c	; 0x40c <Lcd4_Port>
     5a0:	61 e0       	ldi	r22, 0x01	; 1
     5a2:	70 e0       	ldi	r23, 0x00	; 0
     5a4:	87 e1       	ldi	r24, 0x17	; 23
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5ac:	89 ef       	ldi	r24, 0xF9	; 249
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	01 97       	sbiw	r24, 0x01	; 1
     5b2:	f1 f7       	brne	.-4      	; 0x5b0 <Lcd4_Write_Char+0x2a>
     5b4:	00 c0       	rjmp	.+0      	; 0x5b6 <Lcd4_Write_Char+0x30>
     5b6:	00 00       	nop
     5b8:	60 e0       	ldi	r22, 0x00	; 0
     5ba:	70 e0       	ldi	r23, 0x00	; 0
     5bc:	87 e1       	ldi	r24, 0x17	; 23
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5c4:	89 ef       	ldi	r24, 0xF9	; 249
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	01 97       	sbiw	r24, 0x01	; 1
     5ca:	f1 f7       	brne	.-4      	; 0x5c8 <Lcd4_Write_Char+0x42>
     5cc:	00 c0       	rjmp	.+0      	; 0x5ce <Lcd4_Write_Char+0x48>
     5ce:	00 00       	nop
     5d0:	8c 2f       	mov	r24, r28
     5d2:	8f 70       	andi	r24, 0x0F	; 15
     5d4:	0e 94 06 02 	call	0x40c	; 0x40c <Lcd4_Port>
     5d8:	61 e0       	ldi	r22, 0x01	; 1
     5da:	70 e0       	ldi	r23, 0x00	; 0
     5dc:	87 e1       	ldi	r24, 0x17	; 23
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5e4:	89 ef       	ldi	r24, 0xF9	; 249
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	01 97       	sbiw	r24, 0x01	; 1
     5ea:	f1 f7       	brne	.-4      	; 0x5e8 <Lcd4_Write_Char+0x62>
     5ec:	00 c0       	rjmp	.+0      	; 0x5ee <Lcd4_Write_Char+0x68>
     5ee:	00 00       	nop
     5f0:	60 e0       	ldi	r22, 0x00	; 0
     5f2:	70 e0       	ldi	r23, 0x00	; 0
     5f4:	87 e1       	ldi	r24, 0x17	; 23
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5fc:	89 ef       	ldi	r24, 0xF9	; 249
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	01 97       	sbiw	r24, 0x01	; 1
     602:	f1 f7       	brne	.-4      	; 0x600 <Lcd4_Write_Char+0x7a>
     604:	00 c0       	rjmp	.+0      	; 0x606 <Lcd4_Write_Char+0x80>
     606:	00 00       	nop
     608:	cf 91       	pop	r28
     60a:	08 95       	ret

0000060c <Lcd4_Write_String>:
     60c:	cf 93       	push	r28
     60e:	df 93       	push	r29
     610:	ec 01       	movw	r28, r24
     612:	88 81       	ld	r24, Y
     614:	88 23       	and	r24, r24
     616:	31 f0       	breq	.+12     	; 0x624 <Lcd4_Write_String+0x18>
     618:	21 96       	adiw	r28, 0x01	; 1
     61a:	0e 94 c3 02 	call	0x586	; 0x586 <Lcd4_Write_Char>
     61e:	89 91       	ld	r24, Y+
     620:	81 11       	cpse	r24, r1
     622:	fb cf       	rjmp	.-10     	; 0x61a <Lcd4_Write_String+0xe>
     624:	df 91       	pop	r29
     626:	cf 91       	pop	r28
     628:	08 95       	ret

0000062a <__vector_2>:
struct matrix{
	int r;
	int c;
};
struct matrix abhi[100];
ISR(INT1_vect){
     62a:	1f 92       	push	r1
     62c:	0f 92       	push	r0
     62e:	0f b6       	in	r0, 0x3f	; 63
     630:	0f 92       	push	r0
     632:	11 24       	eor	r1, r1
     634:	2f 93       	push	r18
     636:	3f 93       	push	r19
     638:	4f 93       	push	r20
     63a:	5f 93       	push	r21
     63c:	6f 93       	push	r22
     63e:	7f 93       	push	r23
     640:	8f 93       	push	r24
     642:	9f 93       	push	r25
     644:	af 93       	push	r26
     646:	bf 93       	push	r27
     648:	ef 93       	push	r30
     64a:	ff 93       	push	r31
	int a,b;
	GIFR &= ~(1<<INTF1);
     64c:	8a b7       	in	r24, 0x3a	; 58
     64e:	8f 77       	andi	r24, 0x7F	; 127
     650:	8a bf       	out	0x3a, r24	; 58
	a=abhi[size-1].r-abhi[size-2].r;
     652:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <size>
     656:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <size+0x1>
	b=abhi[size-1].c-abhi[size-2].c;
     65a:	df 01       	movw	r26, r30
     65c:	aa 0f       	add	r26, r26
     65e:	bb 1f       	adc	r27, r27
     660:	aa 0f       	add	r26, r26
     662:	bb 1f       	adc	r27, r27
     664:	a2 58       	subi	r26, 0x82	; 130
     666:	bf 4f       	sbci	r27, 0xFF	; 255
     668:	12 96       	adiw	r26, 0x02	; 2
     66a:	2d 91       	ld	r18, X+
     66c:	3c 91       	ld	r19, X
     66e:	13 97       	sbiw	r26, 0x03	; 3
     670:	ee 0f       	add	r30, r30
     672:	ff 1f       	adc	r31, r31
     674:	ee 0f       	add	r30, r30
     676:	ff 1f       	adc	r31, r31
     678:	e6 58       	subi	r30, 0x86	; 134
     67a:	ff 4f       	sbci	r31, 0xFF	; 255
     67c:	82 81       	ldd	r24, Z+2	; 0x02
     67e:	93 81       	ldd	r25, Z+3	; 0x03
	if(a==0)
     680:	6d 91       	ld	r22, X+
     682:	7c 91       	ld	r23, X
     684:	40 81       	ld	r20, Z
     686:	51 81       	ldd	r21, Z+1	; 0x01
     688:	64 17       	cp	r22, r20
     68a:	75 07       	cpc	r23, r21
     68c:	31 f4       	brne	.+12     	; 0x69a <__vector_2+0x70>
	{
		dir=3;
     68e:	43 e0       	ldi	r20, 0x03	; 3
     690:	50 e0       	ldi	r21, 0x00	; 0
     692:	50 93 69 00 	sts	0x0069, r21	; 0x800069 <dir+0x1>
     696:	40 93 68 00 	sts	0x0068, r20	; 0x800068 <dir>
	}
	if(b==0)
     69a:	28 17       	cp	r18, r24
     69c:	39 07       	cpc	r19, r25
     69e:	31 f4       	brne	.+12     	; 0x6ac <__vector_2+0x82>
	{
		dir=4;
     6a0:	84 e0       	ldi	r24, 0x04	; 4
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <dir+0x1>
     6a8:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <dir>
	}
	GIFR |= 1<<INTF1;
     6ac:	8a b7       	in	r24, 0x3a	; 58
     6ae:	80 68       	ori	r24, 0x80	; 128
     6b0:	8a bf       	out	0x3a, r24	; 58
	
}
     6b2:	ff 91       	pop	r31
     6b4:	ef 91       	pop	r30
     6b6:	bf 91       	pop	r27
     6b8:	af 91       	pop	r26
     6ba:	9f 91       	pop	r25
     6bc:	8f 91       	pop	r24
     6be:	7f 91       	pop	r23
     6c0:	6f 91       	pop	r22
     6c2:	5f 91       	pop	r21
     6c4:	4f 91       	pop	r20
     6c6:	3f 91       	pop	r19
     6c8:	2f 91       	pop	r18
     6ca:	0f 90       	pop	r0
     6cc:	0f be       	out	0x3f, r0	; 63
     6ce:	0f 90       	pop	r0
     6d0:	1f 90       	pop	r1
     6d2:	18 95       	reti

000006d4 <__vector_1>:

ISR(INT0_vect){
     6d4:	1f 92       	push	r1
     6d6:	0f 92       	push	r0
     6d8:	0f b6       	in	r0, 0x3f	; 63
     6da:	0f 92       	push	r0
     6dc:	11 24       	eor	r1, r1
     6de:	2f 93       	push	r18
     6e0:	3f 93       	push	r19
     6e2:	4f 93       	push	r20
     6e4:	5f 93       	push	r21
     6e6:	6f 93       	push	r22
     6e8:	7f 93       	push	r23
     6ea:	8f 93       	push	r24
     6ec:	9f 93       	push	r25
     6ee:	af 93       	push	r26
     6f0:	bf 93       	push	r27
     6f2:	ef 93       	push	r30
     6f4:	ff 93       	push	r31
	int a,b;
	GIFR &= ~(1<<INTF0);
     6f6:	8a b7       	in	r24, 0x3a	; 58
     6f8:	8f 7b       	andi	r24, 0xBF	; 191
     6fa:	8a bf       	out	0x3a, r24	; 58
		a=abhi[size-1].r-abhi[size-2].r;
     6fc:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <size>
     700:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <size+0x1>
		b=abhi[size-1].c-abhi[size-2].c;
     704:	df 01       	movw	r26, r30
     706:	aa 0f       	add	r26, r26
     708:	bb 1f       	adc	r27, r27
     70a:	aa 0f       	add	r26, r26
     70c:	bb 1f       	adc	r27, r27
     70e:	a2 58       	subi	r26, 0x82	; 130
     710:	bf 4f       	sbci	r27, 0xFF	; 255
     712:	12 96       	adiw	r26, 0x02	; 2
     714:	2d 91       	ld	r18, X+
     716:	3c 91       	ld	r19, X
     718:	13 97       	sbiw	r26, 0x03	; 3
     71a:	ee 0f       	add	r30, r30
     71c:	ff 1f       	adc	r31, r31
     71e:	ee 0f       	add	r30, r30
     720:	ff 1f       	adc	r31, r31
     722:	e6 58       	subi	r30, 0x86	; 134
     724:	ff 4f       	sbci	r31, 0xFF	; 255
     726:	82 81       	ldd	r24, Z+2	; 0x02
     728:	93 81       	ldd	r25, Z+3	; 0x03
		if(a==0)
     72a:	6d 91       	ld	r22, X+
     72c:	7c 91       	ld	r23, X
     72e:	40 81       	ld	r20, Z
     730:	51 81       	ldd	r21, Z+1	; 0x01
     732:	64 17       	cp	r22, r20
     734:	75 07       	cpc	r23, r21
     736:	31 f4       	brne	.+12     	; 0x744 <__vector_1+0x70>
		{
			dir=1;
     738:	41 e0       	ldi	r20, 0x01	; 1
     73a:	50 e0       	ldi	r21, 0x00	; 0
     73c:	50 93 69 00 	sts	0x0069, r21	; 0x800069 <dir+0x1>
     740:	40 93 68 00 	sts	0x0068, r20	; 0x800068 <dir>
		}
		if(b==0)
     744:	28 17       	cp	r18, r24
     746:	39 07       	cpc	r19, r25
     748:	31 f4       	brne	.+12     	; 0x756 <__vector_1+0x82>
		{
			dir=2;
     74a:	82 e0       	ldi	r24, 0x02	; 2
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <dir+0x1>
     752:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <dir>
		}
	GIFR |=1<<INTF0;
     756:	8a b7       	in	r24, 0x3a	; 58
     758:	80 64       	ori	r24, 0x40	; 64
     75a:	8a bf       	out	0x3a, r24	; 58
	
};
     75c:	ff 91       	pop	r31
     75e:	ef 91       	pop	r30
     760:	bf 91       	pop	r27
     762:	af 91       	pop	r26
     764:	9f 91       	pop	r25
     766:	8f 91       	pop	r24
     768:	7f 91       	pop	r23
     76a:	6f 91       	pop	r22
     76c:	5f 91       	pop	r21
     76e:	4f 91       	pop	r20
     770:	3f 91       	pop	r19
     772:	2f 91       	pop	r18
     774:	0f 90       	pop	r0
     776:	0f be       	out	0x3f, r0	; 63
     778:	0f 90       	pop	r0
     77a:	1f 90       	pop	r1
     77c:	18 95       	reti

0000077e <makefood>:
		drawCharGreen(one);
		_delay_ms(1000);
	}
}
void makefood()
{
     77e:	ef 92       	push	r14
     780:	ff 92       	push	r15
     782:	0f 93       	push	r16
     784:	1f 93       	push	r17
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
	unsigned char z = 0b00000001;
	unsigned char fix,fail;
	while(1)
	{
	
	b=row%8;
     78a:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <row>
     78e:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <row+0x1>
     792:	ca 01       	movw	r24, r20
     794:	87 70       	andi	r24, 0x07	; 7
     796:	90 78       	andi	r25, 0x80	; 128
     798:	99 23       	and	r25, r25
     79a:	24 f4       	brge	.+8      	; 0x7a4 <makefood+0x26>
     79c:	01 97       	sbiw	r24, 0x01	; 1
     79e:	88 6f       	ori	r24, 0xF8	; 248
     7a0:	9f 6f       	ori	r25, 0xFF	; 255
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	9c 01       	movw	r18, r24
	c=col%8;
     7a6:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__data_start>
     7aa:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__data_start+0x1>
     7ae:	cb 01       	movw	r24, r22
     7b0:	87 70       	andi	r24, 0x07	; 7
     7b2:	90 78       	andi	r25, 0x80	; 128
     7b4:	99 23       	and	r25, r25
     7b6:	24 f4       	brge	.+8      	; 0x7c0 <makefood+0x42>
     7b8:	01 97       	sbiw	r24, 0x01	; 1
     7ba:	88 6f       	ori	r24, 0xF8	; 248
     7bc:	9f 6f       	ori	r25, 0xFF	; 255
     7be:	01 96       	adiw	r24, 0x01	; 1
	foodx=b;foody=c;
     7c0:	30 93 67 00 	sts	0x0067, r19	; 0x800067 <foodx+0x1>
     7c4:	20 93 66 00 	sts	0x0066, r18	; 0x800066 <foodx>
     7c8:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <foody+0x1>
     7cc:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <foody>
	c=7-c;
	fix=z;
	fix=fix<<c;
     7d0:	e7 e0       	ldi	r30, 0x07	; 7
     7d2:	f0 e0       	ldi	r31, 0x00	; 0
     7d4:	e8 1b       	sub	r30, r24
     7d6:	f9 0b       	sbc	r31, r25
     7d8:	81 e0       	ldi	r24, 0x01	; 1
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	02 c0       	rjmp	.+4      	; 0x7e2 <makefood+0x64>
     7de:	88 0f       	add	r24, r24
     7e0:	99 1f       	adc	r25, r25
     7e2:	ea 95       	dec	r30
     7e4:	e2 f7       	brpl	.-8      	; 0x7de <makefood+0x60>
     7e6:	f8 2f       	mov	r31, r24
	if((one[b]&fix)==0b00000000)
     7e8:	d9 01       	movw	r26, r18
     7ea:	ac 58       	subi	r26, 0x8C	; 140
     7ec:	bf 4f       	sbci	r27, 0xFF	; 255
     7ee:	ec 91       	ld	r30, X
     7f0:	8e 23       	and	r24, r30
     7f2:	b9 f1       	breq	.+110    	; 0x862 <__stack+0x3>
	b=row%8;
	c=col%8;
	foodx=b;foody=c;
	c=7-c;
	fix=z;
	fix=fix<<c;
     7f4:	07 e0       	ldi	r16, 0x07	; 7
     7f6:	10 e0       	ldi	r17, 0x00	; 0
     7f8:	c1 e0       	ldi	r28, 0x01	; 1
     7fa:	d0 e0       	ldi	r29, 0x00	; 0
	if((one[b]&fix)==0b00000000)
	break;
	row=row+3;
     7fc:	4d 5f       	subi	r20, 0xFD	; 253
     7fe:	5f 4f       	sbci	r21, 0xFF	; 255
	col=col+2;
     800:	6e 5f       	subi	r22, 0xFE	; 254
     802:	7f 4f       	sbci	r23, 0xFF	; 255
	unsigned char z = 0b00000001;
	unsigned char fix,fail;
	while(1)
	{
	
	b=row%8;
     804:	ca 01       	movw	r24, r20
     806:	87 70       	andi	r24, 0x07	; 7
     808:	90 78       	andi	r25, 0x80	; 128
     80a:	99 23       	and	r25, r25
     80c:	24 f4       	brge	.+8      	; 0x816 <makefood+0x98>
     80e:	01 97       	sbiw	r24, 0x01	; 1
     810:	88 6f       	ori	r24, 0xF8	; 248
     812:	9f 6f       	ori	r25, 0xFF	; 255
     814:	01 96       	adiw	r24, 0x01	; 1
     816:	9c 01       	movw	r18, r24
	c=col%8;
     818:	cb 01       	movw	r24, r22
     81a:	87 70       	andi	r24, 0x07	; 7
     81c:	90 78       	andi	r25, 0x80	; 128
     81e:	99 23       	and	r25, r25
     820:	24 f4       	brge	.+8      	; 0x82a <makefood+0xac>
     822:	01 97       	sbiw	r24, 0x01	; 1
     824:	88 6f       	ori	r24, 0xF8	; 248
     826:	9f 6f       	ori	r25, 0xFF	; 255
     828:	01 96       	adiw	r24, 0x01	; 1
     82a:	e8 2e       	mov	r14, r24
     82c:	f9 2e       	mov	r15, r25
	foodx=b;foody=c;
	c=7-c;
	fix=z;
	fix=fix<<c;
     82e:	f8 01       	movw	r30, r16
     830:	e8 1b       	sub	r30, r24
     832:	f9 0b       	sbc	r31, r25
     834:	cf 01       	movw	r24, r30
     836:	fe 01       	movw	r30, r28
     838:	02 c0       	rjmp	.+4      	; 0x83e <makefood+0xc0>
     83a:	ee 0f       	add	r30, r30
     83c:	ff 1f       	adc	r31, r31
     83e:	8a 95       	dec	r24
     840:	e2 f7       	brpl	.-8      	; 0x83a <makefood+0xbc>
     842:	cf 01       	movw	r24, r30
     844:	fe 2f       	mov	r31, r30
	if((one[b]&fix)==0b00000000)
     846:	d9 01       	movw	r26, r18
     848:	ac 58       	subi	r26, 0x8C	; 140
     84a:	bf 4f       	sbci	r27, 0xFF	; 255
     84c:	ec 91       	ld	r30, X
     84e:	8e 23       	and	r24, r30
     850:	a9 f6       	brne	.-86     	; 0x7fc <makefood+0x7e>
     852:	30 93 67 00 	sts	0x0067, r19	; 0x800067 <foodx+0x1>
     856:	20 93 66 00 	sts	0x0066, r18	; 0x800066 <foodx>
     85a:	e0 92 64 00 	sts	0x0064, r14	; 0x800064 <foody>
     85e:	f0 92 65 00 	sts	0x0065, r15	; 0x800065 <foody+0x1>
	if(row>100000)
	row=5;
	if(col>100000)
	col=3;
	}
	row=row+3;
     862:	4d 5f       	subi	r20, 0xFD	; 253
     864:	5f 4f       	sbci	r21, 0xFF	; 255
     866:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <row+0x1>
     86a:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <row>
	col=col+2;
     86e:	cb 01       	movw	r24, r22
     870:	02 96       	adiw	r24, 0x02	; 2
     872:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
     876:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
	one[foodx]=one[foodx]+fix;
     87a:	d9 01       	movw	r26, r18
     87c:	ac 58       	subi	r26, 0x8C	; 140
     87e:	bf 4f       	sbci	r27, 0xFF	; 255
     880:	ef 0f       	add	r30, r31
     882:	ec 93       	st	X, r30
	flags=0;
     884:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <flags+0x1>
     888:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <flags>
}
     88c:	df 91       	pop	r29
     88e:	cf 91       	pop	r28
     890:	1f 91       	pop	r17
     892:	0f 91       	pop	r16
     894:	ff 90       	pop	r15
     896:	ef 90       	pop	r14
     898:	08 95       	ret

0000089a <update>:
void update()
{
     89a:	6f 92       	push	r6
     89c:	7f 92       	push	r7
     89e:	8f 92       	push	r8
     8a0:	9f 92       	push	r9
     8a2:	af 92       	push	r10
     8a4:	bf 92       	push	r11
     8a6:	cf 92       	push	r12
     8a8:	df 92       	push	r13
     8aa:	ef 92       	push	r14
     8ac:	ff 92       	push	r15
     8ae:	0f 93       	push	r16
     8b0:	1f 93       	push	r17
     8b2:	cf 93       	push	r28
     8b4:	df 93       	push	r29
     8b6:	cd b7       	in	r28, 0x3d	; 61
     8b8:	de b7       	in	r29, 0x3e	; 62
     8ba:	c4 56       	subi	r28, 0x64	; 100
     8bc:	d1 09       	sbc	r29, r1
     8be:	0f b6       	in	r0, 0x3f	; 63
     8c0:	f8 94       	cli
     8c2:	de bf       	out	0x3e, r29	; 62
     8c4:	0f be       	out	0x3f, r0	; 63
     8c6:	cd bf       	out	0x3d, r28	; 61
	unsigned char z = 0b00000001;
	unsigned char fix,fail,fi;
	char p[100];
	int i,a,b,x,y,d;
	int firstx,firsty;
	x=abhi[0].r;
     8c8:	e2 e8       	ldi	r30, 0x82	; 130
     8ca:	f0 e0       	ldi	r31, 0x00	; 0
     8cc:	80 80       	ld	r8, Z
     8ce:	91 80       	ldd	r9, Z+1	; 0x01
	y=abhi[0].c;
     8d0:	42 81       	ldd	r20, Z+2	; 0x02
     8d2:	53 81       	ldd	r21, Z+3	; 0x03
	firstx=x;firsty=y;
	y=7-y;
	fix=z;
	fix=fix<<y;
     8d4:	87 e0       	ldi	r24, 0x07	; 7
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	84 1b       	sub	r24, r20
     8da:	95 0b       	sbc	r25, r21
     8dc:	21 e0       	ldi	r18, 0x01	; 1
     8de:	30 e0       	ldi	r19, 0x00	; 0
     8e0:	59 01       	movw	r10, r18
     8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <update+0x4e>
     8e4:	aa 0c       	add	r10, r10
     8e6:	bb 1c       	adc	r11, r11
     8e8:	8a 95       	dec	r24
     8ea:	e2 f7       	brpl	.-8      	; 0x8e4 <update+0x4a>
	fi=fix;
	one[x]=one[x]-fix;
     8ec:	f4 01       	movw	r30, r8
     8ee:	ec 58       	subi	r30, 0x8C	; 140
     8f0:	ff 4f       	sbci	r31, 0xFF	; 255
     8f2:	80 81       	ld	r24, Z
     8f4:	8a 19       	sub	r24, r10
     8f6:	80 83       	st	Z, r24
	for(i=0;i<size-1;i++)
     8f8:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <size>
     8fc:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <size+0x1>
     900:	9c 01       	movw	r18, r24
     902:	21 50       	subi	r18, 0x01	; 1
     904:	31 09       	sbc	r19, r1
     906:	12 16       	cp	r1, r18
     908:	13 06       	cpc	r1, r19
     90a:	a4 f4       	brge	.+40     	; 0x934 <update+0x9a>
     90c:	e2 e8       	ldi	r30, 0x82	; 130
     90e:	f0 e0       	ldi	r31, 0x00	; 0
     910:	bc 01       	movw	r22, r24
     912:	66 0f       	add	r22, r22
     914:	77 1f       	adc	r23, r23
     916:	66 0f       	add	r22, r22
     918:	77 1f       	adc	r23, r23
     91a:	62 58       	subi	r22, 0x82	; 130
     91c:	7f 4f       	sbci	r23, 0xFF	; 255
	{
		abhi[i]=abhi[i+1];
     91e:	c4 80       	ldd	r12, Z+4	; 0x04
     920:	d5 80       	ldd	r13, Z+5	; 0x05
     922:	e6 80       	ldd	r14, Z+6	; 0x06
     924:	f7 80       	ldd	r15, Z+7	; 0x07
     926:	c1 92       	st	Z+, r12
     928:	d1 92       	st	Z+, r13
     92a:	e1 92       	st	Z+, r14
     92c:	f1 92       	st	Z+, r15
	y=7-y;
	fix=z;
	fix=fix<<y;
	fi=fix;
	one[x]=one[x]-fix;
	for(i=0;i<size-1;i++)
     92e:	e6 17       	cp	r30, r22
     930:	f7 07       	cpc	r31, r23
     932:	a9 f7       	brne	.-22     	; 0x91e <update+0x84>
	{
		abhi[i]=abhi[i+1];
	}
	if(dir==2)
     934:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <dir>
     938:	70 91 69 00 	lds	r23, 0x0069	; 0x800069 <dir+0x1>
     93c:	62 30       	cpi	r22, 0x02	; 2
     93e:	71 05       	cpc	r23, r1
     940:	d9 f4       	brne	.+54     	; 0x978 <update+0xde>
	{
		abhi[size-1].r=abhi[size-2].r;
     942:	dc 01       	movw	r26, r24
     944:	aa 0f       	add	r26, r26
     946:	bb 1f       	adc	r27, r27
     948:	aa 0f       	add	r26, r26
     94a:	bb 1f       	adc	r27, r27
     94c:	a6 58       	subi	r26, 0x86	; 134
     94e:	bf 4f       	sbci	r27, 0xFF	; 255
     950:	0d 91       	ld	r16, X+
     952:	1c 91       	ld	r17, X
     954:	11 97       	sbiw	r26, 0x01	; 1
     956:	f9 01       	movw	r30, r18
     958:	ee 0f       	add	r30, r30
     95a:	ff 1f       	adc	r31, r31
     95c:	ee 0f       	add	r30, r30
     95e:	ff 1f       	adc	r31, r31
     960:	ee 57       	subi	r30, 0x7E	; 126
     962:	ff 4f       	sbci	r31, 0xFF	; 255
     964:	11 83       	std	Z+1, r17	; 0x01
     966:	00 83       	st	Z, r16
		abhi[size-1].c=abhi[size-2].c+1;
     968:	12 96       	adiw	r26, 0x02	; 2
     96a:	0d 90       	ld	r0, X+
     96c:	bc 91       	ld	r27, X
     96e:	a0 2d       	mov	r26, r0
     970:	11 96       	adiw	r26, 0x01	; 1
     972:	b3 83       	std	Z+3, r27	; 0x03
     974:	a2 83       	std	Z+2, r26	; 0x02
     976:	3e c0       	rjmp	.+124    	; 0x9f4 <update+0x15a>
	}
	if(dir==1)
     978:	61 30       	cpi	r22, 0x01	; 1
     97a:	71 05       	cpc	r23, r1
     97c:	e1 f4       	brne	.+56     	; 0x9b6 <update+0x11c>
	{
		abhi[size-1].r=abhi[size-2].r-1;
     97e:	f9 01       	movw	r30, r18
     980:	ee 0f       	add	r30, r30
     982:	ff 1f       	adc	r31, r31
     984:	ee 0f       	add	r30, r30
     986:	ff 1f       	adc	r31, r31
     988:	ee 57       	subi	r30, 0x7E	; 126
     98a:	ff 4f       	sbci	r31, 0xFF	; 255
     98c:	dc 01       	movw	r26, r24
     98e:	aa 0f       	add	r26, r26
     990:	bb 1f       	adc	r27, r27
     992:	aa 0f       	add	r26, r26
     994:	bb 1f       	adc	r27, r27
     996:	a6 58       	subi	r26, 0x86	; 134
     998:	bf 4f       	sbci	r27, 0xFF	; 255
     99a:	6d 91       	ld	r22, X+
     99c:	7c 91       	ld	r23, X
     99e:	11 97       	sbiw	r26, 0x01	; 1
     9a0:	61 50       	subi	r22, 0x01	; 1
     9a2:	71 09       	sbc	r23, r1
     9a4:	71 83       	std	Z+1, r23	; 0x01
     9a6:	60 83       	st	Z, r22
		abhi[size-1].c=abhi[size-2].c;
     9a8:	12 96       	adiw	r26, 0x02	; 2
     9aa:	6d 91       	ld	r22, X+
     9ac:	7c 91       	ld	r23, X
     9ae:	13 97       	sbiw	r26, 0x03	; 3
     9b0:	73 83       	std	Z+3, r23	; 0x03
     9b2:	62 83       	std	Z+2, r22	; 0x02
     9b4:	3d c0       	rjmp	.+122    	; 0xa30 <update+0x196>
	}
	if(dir==3)
     9b6:	63 30       	cpi	r22, 0x03	; 3
     9b8:	71 05       	cpc	r23, r1
     9ba:	e1 f4       	brne	.+56     	; 0x9f4 <update+0x15a>
	{
		abhi[size-1].r=abhi[size-2].r+1;
     9bc:	f9 01       	movw	r30, r18
     9be:	ee 0f       	add	r30, r30
     9c0:	ff 1f       	adc	r31, r31
     9c2:	ee 0f       	add	r30, r30
     9c4:	ff 1f       	adc	r31, r31
     9c6:	ee 57       	subi	r30, 0x7E	; 126
     9c8:	ff 4f       	sbci	r31, 0xFF	; 255
     9ca:	dc 01       	movw	r26, r24
     9cc:	aa 0f       	add	r26, r26
     9ce:	bb 1f       	adc	r27, r27
     9d0:	aa 0f       	add	r26, r26
     9d2:	bb 1f       	adc	r27, r27
     9d4:	a6 58       	subi	r26, 0x86	; 134
     9d6:	bf 4f       	sbci	r27, 0xFF	; 255
     9d8:	6d 91       	ld	r22, X+
     9da:	7c 91       	ld	r23, X
     9dc:	11 97       	sbiw	r26, 0x01	; 1
     9de:	6f 5f       	subi	r22, 0xFF	; 255
     9e0:	7f 4f       	sbci	r23, 0xFF	; 255
     9e2:	71 83       	std	Z+1, r23	; 0x01
     9e4:	60 83       	st	Z, r22
		abhi[size-1].c=abhi[size-2].c;
     9e6:	12 96       	adiw	r26, 0x02	; 2
     9e8:	6d 91       	ld	r22, X+
     9ea:	7c 91       	ld	r23, X
     9ec:	13 97       	sbiw	r26, 0x03	; 3
     9ee:	73 83       	std	Z+3, r23	; 0x03
     9f0:	62 83       	std	Z+2, r22	; 0x02
     9f2:	1e c0       	rjmp	.+60     	; 0xa30 <update+0x196>
	}
	if(dir==4)
     9f4:	64 30       	cpi	r22, 0x04	; 4
     9f6:	71 05       	cpc	r23, r1
     9f8:	d9 f4       	brne	.+54     	; 0xa30 <update+0x196>
	{
		abhi[size-1].r=abhi[size-2].r;
     9fa:	dc 01       	movw	r26, r24
     9fc:	aa 0f       	add	r26, r26
     9fe:	bb 1f       	adc	r27, r27
     a00:	aa 0f       	add	r26, r26
     a02:	bb 1f       	adc	r27, r27
     a04:	a6 58       	subi	r26, 0x86	; 134
     a06:	bf 4f       	sbci	r27, 0xFF	; 255
     a08:	6d 91       	ld	r22, X+
     a0a:	7c 91       	ld	r23, X
     a0c:	11 97       	sbiw	r26, 0x01	; 1
     a0e:	f9 01       	movw	r30, r18
     a10:	ee 0f       	add	r30, r30
     a12:	ff 1f       	adc	r31, r31
     a14:	ee 0f       	add	r30, r30
     a16:	ff 1f       	adc	r31, r31
     a18:	ee 57       	subi	r30, 0x7E	; 126
     a1a:	ff 4f       	sbci	r31, 0xFF	; 255
     a1c:	71 83       	std	Z+1, r23	; 0x01
     a1e:	60 83       	st	Z, r22
		abhi[size-1].c=abhi[size-2].c-1;
     a20:	12 96       	adiw	r26, 0x02	; 2
     a22:	6d 91       	ld	r22, X+
     a24:	7c 91       	ld	r23, X
     a26:	13 97       	sbiw	r26, 0x03	; 3
     a28:	61 50       	subi	r22, 0x01	; 1
     a2a:	71 09       	sbc	r23, r1
     a2c:	73 83       	std	Z+3, r23	; 0x03
     a2e:	62 83       	std	Z+2, r22	; 0x02
	}
	if(abhi[size-1].r>=8)
     a30:	f9 01       	movw	r30, r18
     a32:	ee 0f       	add	r30, r30
     a34:	ff 1f       	adc	r31, r31
     a36:	ee 0f       	add	r30, r30
     a38:	ff 1f       	adc	r31, r31
     a3a:	ee 57       	subi	r30, 0x7E	; 126
     a3c:	ff 4f       	sbci	r31, 0xFF	; 255
     a3e:	e0 80       	ld	r14, Z
     a40:	f1 80       	ldd	r15, Z+1	; 0x01
     a42:	68 e0       	ldi	r22, 0x08	; 8
     a44:	e6 16       	cp	r14, r22
     a46:	f1 04       	cpc	r15, r1
     a48:	34 f0       	brlt	.+12     	; 0xa56 <update+0x1bc>
	flag=1;
     a4a:	61 e0       	ldi	r22, 0x01	; 1
     a4c:	70 e0       	ldi	r23, 0x00	; 0
     a4e:	70 93 81 00 	sts	0x0081, r23	; 0x800081 <flag+0x1>
     a52:	60 93 80 00 	sts	0x0080, r22	; 0x800080 <flag>
	if(abhi[size-1].c>=8)
     a56:	f9 01       	movw	r30, r18
     a58:	ee 0f       	add	r30, r30
     a5a:	ff 1f       	adc	r31, r31
     a5c:	ee 0f       	add	r30, r30
     a5e:	ff 1f       	adc	r31, r31
     a60:	ee 57       	subi	r30, 0x7E	; 126
     a62:	ff 4f       	sbci	r31, 0xFF	; 255
     a64:	62 80       	ldd	r6, Z+2	; 0x02
     a66:	73 80       	ldd	r7, Z+3	; 0x03
     a68:	68 e0       	ldi	r22, 0x08	; 8
     a6a:	66 16       	cp	r6, r22
     a6c:	71 04       	cpc	r7, r1
     a6e:	34 f0       	brlt	.+12     	; 0xa7c <update+0x1e2>
	flag=1;
     a70:	61 e0       	ldi	r22, 0x01	; 1
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	70 93 81 00 	sts	0x0081, r23	; 0x800081 <flag+0x1>
     a78:	60 93 80 00 	sts	0x0080, r22	; 0x800080 <flag>
	if(abhi[size-1].r<0)
     a7c:	ff 20       	and	r15, r15
     a7e:	34 f4       	brge	.+12     	; 0xa8c <update+0x1f2>
	flag=1;
     a80:	61 e0       	ldi	r22, 0x01	; 1
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	70 93 81 00 	sts	0x0081, r23	; 0x800081 <flag+0x1>
     a88:	60 93 80 00 	sts	0x0080, r22	; 0x800080 <flag>
	if(abhi[size-1].c<0)
     a8c:	77 20       	and	r7, r7
     a8e:	34 f4       	brge	.+12     	; 0xa9c <update+0x202>
	flag=1;
     a90:	61 e0       	ldi	r22, 0x01	; 1
     a92:	70 e0       	ldi	r23, 0x00	; 0
     a94:	70 93 81 00 	sts	0x0081, r23	; 0x800081 <flag+0x1>
     a98:	60 93 80 00 	sts	0x0080, r22	; 0x800080 <flag>
	x=abhi[size-1].r;
	y=abhi[size-1].c;
	d=y;
	y=7-y;
	fix=z;
	fix=fix<<y;
     a9c:	67 e0       	ldi	r22, 0x07	; 7
     a9e:	70 e0       	ldi	r23, 0x00	; 0
     aa0:	66 19       	sub	r22, r6
     aa2:	77 09       	sbc	r23, r7
     aa4:	e1 e0       	ldi	r30, 0x01	; 1
     aa6:	f0 e0       	ldi	r31, 0x00	; 0
     aa8:	6f 01       	movw	r12, r30
     aaa:	02 c0       	rjmp	.+4      	; 0xab0 <update+0x216>
     aac:	cc 0c       	add	r12, r12
     aae:	dd 1c       	adc	r13, r13
     ab0:	6a 95       	dec	r22
     ab2:	e2 f7       	brpl	.-8      	; 0xaac <update+0x212>
	if((foodx==x)&&(foody==d))
     ab4:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <foodx>
     ab8:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <foodx+0x1>
     abc:	e6 16       	cp	r14, r22
     abe:	f7 06       	cpc	r15, r23
     ac0:	d1 f5       	brne	.+116    	; 0xb36 <update+0x29c>
     ac2:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <foody>
     ac6:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <foody+0x1>
     aca:	66 16       	cp	r6, r22
     acc:	77 06       	cpc	r7, r23
     ace:	99 f5       	brne	.+102    	; 0xb36 <update+0x29c>
	{
		score+=5;
     ad0:	60 91 7c 00 	lds	r22, 0x007C	; 0x80007c <__data_end>
     ad4:	70 91 7d 00 	lds	r23, 0x007D	; 0x80007d <__data_end+0x1>
     ad8:	6b 5f       	subi	r22, 0xFB	; 251
     ada:	7f 4f       	sbci	r23, 0xFF	; 255
     adc:	70 93 7d 00 	sts	0x007D, r23	; 0x80007d <__data_end+0x1>
     ae0:	60 93 7c 00 	sts	0x007C, r22	; 0x80007c <__data_end>
		flags=1;
     ae4:	61 e0       	ldi	r22, 0x01	; 1
     ae6:	70 e0       	ldi	r23, 0x00	; 0
     ae8:	70 93 7f 00 	sts	0x007F, r23	; 0x80007f <flags+0x1>
     aec:	60 93 7e 00 	sts	0x007E, r22	; 0x80007e <flags>
		size++;
     af0:	bc 01       	movw	r22, r24
     af2:	6f 5f       	subi	r22, 0xFF	; 255
     af4:	7f 4f       	sbci	r23, 0xFF	; 255
     af6:	70 93 6b 00 	sts	0x006B, r23	; 0x80006b <size+0x1>
     afa:	60 93 6a 00 	sts	0x006A, r22	; 0x80006a <size>
		for(i=size-2;i>=0;i--)
     afe:	33 23       	and	r19, r19
     b00:	a4 f0       	brlt	.+40     	; 0xb2a <update+0x290>
     b02:	88 0f       	add	r24, r24
     b04:	99 1f       	adc	r25, r25
     b06:	88 0f       	add	r24, r24
     b08:	99 1f       	adc	r25, r25
     b0a:	fc 01       	movw	r30, r24
     b0c:	ee 57       	subi	r30, 0x7E	; 126
     b0e:	ff 4f       	sbci	r31, 0xFF	; 255
     b10:	82 e8       	ldi	r24, 0x82	; 130
     b12:	90 e0       	ldi	r25, 0x00	; 0
		{
			abhi[i+1]=abhi[i];
     b14:	32 91       	ld	r19, -Z
     b16:	22 91       	ld	r18, -Z
     b18:	12 91       	ld	r17, -Z
     b1a:	02 91       	ld	r16, -Z
     b1c:	04 83       	std	Z+4, r16	; 0x04
     b1e:	15 83       	std	Z+5, r17	; 0x05
     b20:	26 83       	std	Z+6, r18	; 0x06
     b22:	37 83       	std	Z+7, r19	; 0x07
	if((foodx==x)&&(foody==d))
	{
		score+=5;
		flags=1;
		size++;
		for(i=size-2;i>=0;i--)
     b24:	e8 17       	cp	r30, r24
     b26:	f9 07       	cpc	r31, r25
     b28:	a9 f7       	brne	.-22     	; 0xb14 <update+0x27a>
		{
			abhi[i+1]=abhi[i];
		}
		abhi[0].r=firstx;
     b2a:	e2 e8       	ldi	r30, 0x82	; 130
     b2c:	f0 e0       	ldi	r31, 0x00	; 0
     b2e:	91 82       	std	Z+1, r9	; 0x01
     b30:	80 82       	st	Z, r8
		abhi[0].c=firsty;
     b32:	53 83       	std	Z+3, r21	; 0x03
     b34:	42 83       	std	Z+2, r20	; 0x02
	}
	Lcd4_Clear();
     b36:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <Lcd4_Clear>
	Lcd4_Set_Cursor(1,1);
     b3a:	61 e0       	ldi	r22, 0x01	; 1
     b3c:	81 e0       	ldi	r24, 0x01	; 1
     b3e:	0e 94 72 02 	call	0x4e4	; 0x4e4 <Lcd4_Set_Cursor>
	dtostrf(score,2,2,p);
     b42:	60 91 7c 00 	lds	r22, 0x007C	; 0x80007c <__data_end>
     b46:	70 91 7d 00 	lds	r23, 0x007D	; 0x80007d <__data_end+0x1>
     b4a:	07 2e       	mov	r0, r23
     b4c:	00 0c       	add	r0, r0
     b4e:	88 0b       	sbc	r24, r24
     b50:	99 0b       	sbc	r25, r25
     b52:	0e 94 b6 06 	call	0xd6c	; 0xd6c <__floatsisf>
     b56:	8e 01       	movw	r16, r28
     b58:	0f 5f       	subi	r16, 0xFF	; 255
     b5a:	1f 4f       	sbci	r17, 0xFF	; 255
     b5c:	22 e0       	ldi	r18, 0x02	; 2
     b5e:	42 e0       	ldi	r20, 0x02	; 2
     b60:	0e 94 f1 06 	call	0xde2	; 0xde2 <dtostrf>
	//snprintf(p,20,"%d",score);
	Lcd4_Write_String(p);
     b64:	c8 01       	movw	r24, r16
     b66:	0e 94 06 03 	call	0x60c	; 0x60c <Lcd4_Write_String>
	if(((one[x]&fix)!=0b00000000) && !(foodx==x && foody==d))
     b6a:	f7 01       	movw	r30, r14
     b6c:	ec 58       	subi	r30, 0x8C	; 140
     b6e:	ff 4f       	sbci	r31, 0xFF	; 255
     b70:	80 81       	ld	r24, Z
     b72:	98 2f       	mov	r25, r24
     b74:	9c 21       	and	r25, r12
     b76:	a9 f0       	breq	.+42     	; 0xba2 <update+0x308>
     b78:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <foodx>
     b7c:	30 91 67 00 	lds	r19, 0x0067	; 0x800067 <foodx+0x1>
     b80:	e2 16       	cp	r14, r18
     b82:	f3 06       	cpc	r15, r19
     b84:	39 f4       	brne	.+14     	; 0xb94 <update+0x2fa>
     b86:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <foody>
     b8a:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <foody+0x1>
     b8e:	62 16       	cp	r6, r18
     b90:	73 06       	cpc	r7, r19
     b92:	39 f0       	breq	.+14     	; 0xba2 <update+0x308>
	flag=1;
     b94:	81 e0       	ldi	r24, 0x01	; 1
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <flag+0x1>
     b9c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <flag>
     ba0:	13 c0       	rjmp	.+38     	; 0xbc8 <update+0x32e>
	else if(flags==1)
     ba2:	20 91 7e 00 	lds	r18, 0x007E	; 0x80007e <flags>
     ba6:	30 91 7f 00 	lds	r19, 0x007F	; 0x80007f <flags+0x1>
     baa:	21 30       	cpi	r18, 0x01	; 1
     bac:	31 05       	cpc	r19, r1
     bae:	39 f4       	brne	.+14     	; 0xbbe <update+0x324>
	{
	 one[firstx]=one[firstx]+fi;	
     bb0:	f4 01       	movw	r30, r8
     bb2:	ec 58       	subi	r30, 0x8C	; 140
     bb4:	ff 4f       	sbci	r31, 0xFF	; 255
     bb6:	80 81       	ld	r24, Z
     bb8:	a8 0e       	add	r10, r24
     bba:	a0 82       	st	Z, r10
     bbc:	05 c0       	rjmp	.+10     	; 0xbc8 <update+0x32e>
	}
	else
	one[x]=one[x]+fix;
     bbe:	f7 01       	movw	r30, r14
     bc0:	ec 58       	subi	r30, 0x8C	; 140
     bc2:	ff 4f       	sbci	r31, 0xFF	; 255
     bc4:	c8 0e       	add	r12, r24
     bc6:	c0 82       	st	Z, r12
}
     bc8:	cc 59       	subi	r28, 0x9C	; 156
     bca:	df 4f       	sbci	r29, 0xFF	; 255
     bcc:	0f b6       	in	r0, 0x3f	; 63
     bce:	f8 94       	cli
     bd0:	de bf       	out	0x3e, r29	; 62
     bd2:	0f be       	out	0x3f, r0	; 63
     bd4:	cd bf       	out	0x3d, r28	; 61
     bd6:	df 91       	pop	r29
     bd8:	cf 91       	pop	r28
     bda:	1f 91       	pop	r17
     bdc:	0f 91       	pop	r16
     bde:	ff 90       	pop	r15
     be0:	ef 90       	pop	r14
     be2:	df 90       	pop	r13
     be4:	cf 90       	pop	r12
     be6:	bf 90       	pop	r11
     be8:	af 90       	pop	r10
     bea:	9f 90       	pop	r9
     bec:	8f 90       	pop	r8
     bee:	7f 90       	pop	r7
     bf0:	6f 90       	pop	r6
     bf2:	08 95       	ret

00000bf4 <initializeINT>:
		
	}
}
void initializeINT(int INT_type){

	switch (INT_type){
     bf4:	00 97       	sbiw	r24, 0x00	; 0
     bf6:	19 f0       	breq	.+6      	; 0xbfe <initializeINT+0xa>
     bf8:	01 97       	sbiw	r24, 0x01	; 1
     bfa:	39 f0       	breq	.+14     	; 0xc0a <initializeINT+0x16>
     bfc:	0c c0       	rjmp	.+24     	; 0xc16 <initializeINT+0x22>
		case 0 :{
			GICR |=1<<INT0;					//enable INT0
     bfe:	8b b7       	in	r24, 0x3b	; 59
     c00:	80 64       	ori	r24, 0x40	; 64
     c02:	8b bf       	out	0x3b, r24	; 59
			MCUCR |= 1<<ISC01 | 1<<ISC00;	 //enable rising edge
     c04:	85 b7       	in	r24, 0x35	; 53
     c06:	83 60       	ori	r24, 0x03	; 3
     c08:	85 bf       	out	0x35, r24	; 53
			
		}
		case 1 :{
			GICR|=1<<INT1;					//enable INT1
     c0a:	8b b7       	in	r24, 0x3b	; 59
     c0c:	80 68       	ori	r24, 0x80	; 128
     c0e:	8b bf       	out	0x3b, r24	; 59
			MCUCR |= 1<<ISC11 | 1<<ISC10;   	//enable rising edge
     c10:	85 b7       	in	r24, 0x35	; 53
     c12:	8c 60       	ori	r24, 0x0C	; 12
     c14:	85 bf       	out	0x35, r24	; 53
			
		}
		
	}
	sei();
     c16:	78 94       	sei
     c18:	08 95       	ret

00000c1a <ROL>:
	
}
unsigned char ROL(unsigned char number, int shiftAmount)
{
	int i;
	for (i=0; i<shiftAmount; i++)
     c1a:	16 16       	cp	r1, r22
     c1c:	17 06       	cpc	r1, r23
     c1e:	4c f4       	brge	.+18     	; 0xc32 <ROL+0x18>
     c20:	20 e0       	ldi	r18, 0x00	; 0
     c22:	30 e0       	ldi	r19, 0x00	; 0
	{
		unsigned char MSB = number & 0b10000000;
		MSB = MSB >> 7;
		number = number << 1;
		number = number | MSB;
     c24:	88 0f       	add	r24, r24
     c26:	81 1d       	adc	r24, r1
	
}
unsigned char ROL(unsigned char number, int shiftAmount)
{
	int i;
	for (i=0; i<shiftAmount; i++)
     c28:	2f 5f       	subi	r18, 0xFF	; 255
     c2a:	3f 4f       	sbci	r19, 0xFF	; 255
     c2c:	62 17       	cp	r22, r18
     c2e:	73 07       	cpc	r23, r19
     c30:	c9 f7       	brne	.-14     	; 0xc24 <ROL+0xa>
		MSB = MSB >> 7;
		number = number << 1;
		number = number | MSB;
	}
	return number;
}
     c32:	08 95       	ret

00000c34 <drawCharGreen>:
	}
	else
	one[x]=one[x]+fix;
}
void drawCharGreen(unsigned char *character)
{
     c34:	cf 92       	push	r12
     c36:	df 92       	push	r13
     c38:	ef 92       	push	r14
     c3a:	ff 92       	push	r15
     c3c:	0f 93       	push	r16
     c3e:	1f 93       	push	r17
     c40:	cf 93       	push	r28
     c42:	df 93       	push	r29
     c44:	c8 2e       	mov	r12, r24
     c46:	d9 2e       	mov	r13, r25
	long i;
	PORTD = 0xFF;
     c48:	8f ef       	ldi	r24, 0xFF	; 255
     c4a:	82 bb       	out	0x12, r24	; 18
     c4c:	e1 2c       	mov	r14, r1
     c4e:	f1 2c       	mov	r15, r1
     c50:	1b c0       	rjmp	.+54     	; 0xc88 <drawCharGreen+0x54>
	{
		int j;
		unsigned char row = 0b00000001;
		for (j=0; j<8; j++)
		{
			PORTA = ROL(row, j);
     c52:	be 01       	movw	r22, r28
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	0e 94 0d 06 	call	0xc1a	; 0xc1a <ROL>
     c5a:	8b bb       	out	0x1b, r24	; 27
			PORTB = ~character[j];
     c5c:	f8 01       	movw	r30, r16
     c5e:	81 91       	ld	r24, Z+
     c60:	8f 01       	movw	r16, r30
     c62:	80 95       	com	r24
     c64:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c66:	89 ef       	ldi	r24, 0xF9	; 249
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	01 97       	sbiw	r24, 0x01	; 1
     c6c:	f1 f7       	brne	.-4      	; 0xc6a <drawCharGreen+0x36>
     c6e:	00 c0       	rjmp	.+0      	; 0xc70 <drawCharGreen+0x3c>
     c70:	00 00       	nop
	PORTD = 0xFF;
	for (i=0; i<10; i++)
	{
		int j;
		unsigned char row = 0b00000001;
		for (j=0; j<8; j++)
     c72:	21 96       	adiw	r28, 0x01	; 1
     c74:	c8 30       	cpi	r28, 0x08	; 8
     c76:	d1 05       	cpc	r29, r1
     c78:	61 f7       	brne	.-40     	; 0xc52 <drawCharGreen+0x1e>
     c7a:	9f ef       	ldi	r25, 0xFF	; 255
     c7c:	e9 1a       	sub	r14, r25
     c7e:	f9 0a       	sbc	r15, r25
}
void drawCharGreen(unsigned char *character)
{
	long i;
	PORTD = 0xFF;
	for (i=0; i<10; i++)
     c80:	ea e0       	ldi	r30, 0x0A	; 10
     c82:	ee 16       	cp	r14, r30
     c84:	f1 04       	cpc	r15, r1
     c86:	29 f0       	breq	.+10     	; 0xc92 <drawCharGreen+0x5e>
     c88:	0c 2d       	mov	r16, r12
     c8a:	1d 2d       	mov	r17, r13
	}
	else
	one[x]=one[x]+fix;
}
void drawCharGreen(unsigned char *character)
{
     c8c:	c0 e0       	ldi	r28, 0x00	; 0
     c8e:	d0 e0       	ldi	r29, 0x00	; 0
     c90:	e0 cf       	rjmp	.-64     	; 0xc52 <drawCharGreen+0x1e>
			PORTB = ~character[j];
			_delay_ms(1);
		}
		
	}
}
     c92:	df 91       	pop	r29
     c94:	cf 91       	pop	r28
     c96:	1f 91       	pop	r17
     c98:	0f 91       	pop	r16
     c9a:	ff 90       	pop	r15
     c9c:	ef 90       	pop	r14
     c9e:	df 90       	pop	r13
     ca0:	cf 90       	pop	r12
     ca2:	08 95       	ret

00000ca4 <main>:
		}
	GIFR |=1<<INTF0;
	
};
int main(void)
{
     ca4:	cf 93       	push	r28
     ca6:	df 93       	push	r29
	DDRA=0xff;//positive row
     ca8:	8f ef       	ldi	r24, 0xFF	; 255
     caa:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xff;//negative column green
     cac:	87 bb       	out	0x17, r24	; 23
	DDRD = 0x00;
     cae:	11 ba       	out	0x11, r1	; 17
	DDRC = 0xff;
     cb0:	84 bb       	out	0x14, r24	; 20
	MCUCSR= (1<<JTD);
     cb2:	80 e8       	ldi	r24, 0x80	; 128
     cb4:	84 bf       	out	0x34, r24	; 52
	MCUCSR= (1<<JTD);
     cb6:	84 bf       	out	0x34, r24	; 52
	Lcd4_Init();
     cb8:	0e 94 8f 02 	call	0x51e	; 0x51e <Lcd4_Init>
	int cnt = 0;
	MCUCR=0b11110000;
     cbc:	80 ef       	ldi	r24, 0xF0	; 240
     cbe:	85 bf       	out	0x35, r24	; 53
	initializeINT(0);
     cc0:	80 e0       	ldi	r24, 0x00	; 0
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <initializeINT>
	initializeINT(1);
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <initializeINT>
	int i;
	for(i=0;i<4;i++)
	{
		abhi[i].r=4;
     cd0:	e2 e8       	ldi	r30, 0x82	; 130
     cd2:	f0 e0       	ldi	r31, 0x00	; 0
     cd4:	84 e0       	ldi	r24, 0x04	; 4
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	91 83       	std	Z+1, r25	; 0x01
     cda:	80 83       	st	Z, r24
		abhi[i].c=i;
     cdc:	13 82       	std	Z+3, r1	; 0x03
     cde:	12 82       	std	Z+2, r1	; 0x02
	initializeINT(0);
	initializeINT(1);
	int i;
	for(i=0;i<4;i++)
	{
		abhi[i].r=4;
     ce0:	95 83       	std	Z+5, r25	; 0x05
     ce2:	84 83       	std	Z+4, r24	; 0x04
		abhi[i].c=i;
     ce4:	21 e0       	ldi	r18, 0x01	; 1
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	37 83       	std	Z+7, r19	; 0x07
     cea:	26 83       	std	Z+6, r18	; 0x06
	initializeINT(0);
	initializeINT(1);
	int i;
	for(i=0;i<4;i++)
	{
		abhi[i].r=4;
     cec:	91 87       	std	Z+9, r25	; 0x09
     cee:	80 87       	std	Z+8, r24	; 0x08
		abhi[i].c=i;
     cf0:	22 e0       	ldi	r18, 0x02	; 2
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	33 87       	std	Z+11, r19	; 0x0b
     cf6:	22 87       	std	Z+10, r18	; 0x0a
	initializeINT(0);
	initializeINT(1);
	int i;
	for(i=0;i<4;i++)
	{
		abhi[i].r=4;
     cf8:	95 87       	std	Z+13, r25	; 0x0d
     cfa:	84 87       	std	Z+12, r24	; 0x0c
		abhi[i].c=i;
     cfc:	83 e0       	ldi	r24, 0x03	; 3
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	97 87       	std	Z+15, r25	; 0x0f
     d02:	86 87       	std	Z+14, r24	; 0x0e
	}
	makefood();
     d04:	0e 94 bf 03 	call	0x77e	; 0x77e <makefood>
	while(1)
	{
		int i,a,b,c;
		update();
     d08:	0e 94 4d 04 	call	0x89a	; 0x89a <update>
		if(flags==1)
     d0c:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <flags>
     d10:	90 91 7f 00 	lds	r25, 0x007F	; 0x80007f <flags+0x1>
     d14:	01 97       	sbiw	r24, 0x01	; 1
     d16:	11 f4       	brne	.+4      	; 0xd1c <main+0x78>
		makefood();
     d18:	0e 94 bf 03 	call	0x77e	; 0x77e <makefood>
		if(flag==1)
     d1c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <flag>
     d20:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <flag+0x1>
     d24:	01 97       	sbiw	r24, 0x01	; 1
     d26:	49 f4       	brne	.+18     	; 0xd3a <main+0x96>
     d28:	c4 e6       	ldi	r28, 0x64	; 100
     d2a:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for (i=0; i<100; i++)
			drawCharGreen(end);
     d2c:	8c e6       	ldi	r24, 0x6C	; 108
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	0e 94 1a 06 	call	0xc34	; 0xc34 <drawCharGreen>
     d34:	21 97       	sbiw	r28, 0x01	; 1
		update();
		if(flags==1)
		makefood();
		if(flag==1)
		{
			for (i=0; i<100; i++)
     d36:	d1 f7       	brne	.-12     	; 0xd2c <main+0x88>
     d38:	12 c0       	rjmp	.+36     	; 0xd5e <main+0xba>
     d3a:	ca e0       	ldi	r28, 0x0A	; 10
     d3c:	d0 e0       	ldi	r29, 0x00	; 0
			drawCharGreen(end);
			return 0;
		}
		for(i=0;i<10;i++)
		drawCharGreen(one);
     d3e:	84 e7       	ldi	r24, 0x74	; 116
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	0e 94 1a 06 	call	0xc34	; 0xc34 <drawCharGreen>
     d46:	21 97       	sbiw	r28, 0x01	; 1
		{
			for (i=0; i<100; i++)
			drawCharGreen(end);
			return 0;
		}
		for(i=0;i<10;i++)
     d48:	d1 f7       	brne	.-12     	; 0xd3e <main+0x9a>
     d4a:	2f e3       	ldi	r18, 0x3F	; 63
     d4c:	8d e0       	ldi	r24, 0x0D	; 13
     d4e:	93 e0       	ldi	r25, 0x03	; 3
     d50:	21 50       	subi	r18, 0x01	; 1
     d52:	80 40       	sbci	r24, 0x00	; 0
     d54:	90 40       	sbci	r25, 0x00	; 0
     d56:	e1 f7       	brne	.-8      	; 0xd50 <main+0xac>
     d58:	00 c0       	rjmp	.+0      	; 0xd5a <main+0xb6>
     d5a:	00 00       	nop
     d5c:	d5 cf       	rjmp	.-86     	; 0xd08 <main+0x64>
		drawCharGreen(one);
		_delay_ms(1000);
	}
}
     d5e:	80 e0       	ldi	r24, 0x00	; 0
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	df 91       	pop	r29
     d64:	cf 91       	pop	r28
     d66:	08 95       	ret

00000d68 <__floatunsisf>:
     d68:	e8 94       	clt
     d6a:	09 c0       	rjmp	.+18     	; 0xd7e <__floatsisf+0x12>

00000d6c <__floatsisf>:
     d6c:	97 fb       	bst	r25, 7
     d6e:	3e f4       	brtc	.+14     	; 0xd7e <__floatsisf+0x12>
     d70:	90 95       	com	r25
     d72:	80 95       	com	r24
     d74:	70 95       	com	r23
     d76:	61 95       	neg	r22
     d78:	7f 4f       	sbci	r23, 0xFF	; 255
     d7a:	8f 4f       	sbci	r24, 0xFF	; 255
     d7c:	9f 4f       	sbci	r25, 0xFF	; 255
     d7e:	99 23       	and	r25, r25
     d80:	a9 f0       	breq	.+42     	; 0xdac <__floatsisf+0x40>
     d82:	f9 2f       	mov	r31, r25
     d84:	96 e9       	ldi	r25, 0x96	; 150
     d86:	bb 27       	eor	r27, r27
     d88:	93 95       	inc	r25
     d8a:	f6 95       	lsr	r31
     d8c:	87 95       	ror	r24
     d8e:	77 95       	ror	r23
     d90:	67 95       	ror	r22
     d92:	b7 95       	ror	r27
     d94:	f1 11       	cpse	r31, r1
     d96:	f8 cf       	rjmp	.-16     	; 0xd88 <__floatsisf+0x1c>
     d98:	fa f4       	brpl	.+62     	; 0xdd8 <__floatsisf+0x6c>
     d9a:	bb 0f       	add	r27, r27
     d9c:	11 f4       	brne	.+4      	; 0xda2 <__floatsisf+0x36>
     d9e:	60 ff       	sbrs	r22, 0
     da0:	1b c0       	rjmp	.+54     	; 0xdd8 <__floatsisf+0x6c>
     da2:	6f 5f       	subi	r22, 0xFF	; 255
     da4:	7f 4f       	sbci	r23, 0xFF	; 255
     da6:	8f 4f       	sbci	r24, 0xFF	; 255
     da8:	9f 4f       	sbci	r25, 0xFF	; 255
     daa:	16 c0       	rjmp	.+44     	; 0xdd8 <__floatsisf+0x6c>
     dac:	88 23       	and	r24, r24
     dae:	11 f0       	breq	.+4      	; 0xdb4 <__floatsisf+0x48>
     db0:	96 e9       	ldi	r25, 0x96	; 150
     db2:	11 c0       	rjmp	.+34     	; 0xdd6 <__floatsisf+0x6a>
     db4:	77 23       	and	r23, r23
     db6:	21 f0       	breq	.+8      	; 0xdc0 <__floatsisf+0x54>
     db8:	9e e8       	ldi	r25, 0x8E	; 142
     dba:	87 2f       	mov	r24, r23
     dbc:	76 2f       	mov	r23, r22
     dbe:	05 c0       	rjmp	.+10     	; 0xdca <__floatsisf+0x5e>
     dc0:	66 23       	and	r22, r22
     dc2:	71 f0       	breq	.+28     	; 0xde0 <__floatsisf+0x74>
     dc4:	96 e8       	ldi	r25, 0x86	; 134
     dc6:	86 2f       	mov	r24, r22
     dc8:	70 e0       	ldi	r23, 0x00	; 0
     dca:	60 e0       	ldi	r22, 0x00	; 0
     dcc:	2a f0       	brmi	.+10     	; 0xdd8 <__floatsisf+0x6c>
     dce:	9a 95       	dec	r25
     dd0:	66 0f       	add	r22, r22
     dd2:	77 1f       	adc	r23, r23
     dd4:	88 1f       	adc	r24, r24
     dd6:	da f7       	brpl	.-10     	; 0xdce <__floatsisf+0x62>
     dd8:	88 0f       	add	r24, r24
     dda:	96 95       	lsr	r25
     ddc:	87 95       	ror	r24
     dde:	97 f9       	bld	r25, 7
     de0:	08 95       	ret

00000de2 <dtostrf>:
     de2:	ef 92       	push	r14
     de4:	0f 93       	push	r16
     de6:	1f 93       	push	r17
     de8:	cf 93       	push	r28
     dea:	df 93       	push	r29
     dec:	e8 01       	movw	r28, r16
     dee:	47 fd       	sbrc	r20, 7
     df0:	02 c0       	rjmp	.+4      	; 0xdf6 <dtostrf+0x14>
     df2:	34 e0       	ldi	r19, 0x04	; 4
     df4:	01 c0       	rjmp	.+2      	; 0xdf8 <dtostrf+0x16>
     df6:	34 e1       	ldi	r19, 0x14	; 20
     df8:	04 2e       	mov	r0, r20
     dfa:	00 0c       	add	r0, r0
     dfc:	55 0b       	sbc	r21, r21
     dfe:	57 ff       	sbrs	r21, 7
     e00:	03 c0       	rjmp	.+6      	; 0xe08 <dtostrf+0x26>
     e02:	51 95       	neg	r21
     e04:	41 95       	neg	r20
     e06:	51 09       	sbc	r21, r1
     e08:	e3 2e       	mov	r14, r19
     e0a:	02 2f       	mov	r16, r18
     e0c:	24 2f       	mov	r18, r20
     e0e:	ae 01       	movw	r20, r28
     e10:	0e 94 11 07 	call	0xe22	; 0xe22 <dtoa_prf>
     e14:	ce 01       	movw	r24, r28
     e16:	df 91       	pop	r29
     e18:	cf 91       	pop	r28
     e1a:	1f 91       	pop	r17
     e1c:	0f 91       	pop	r16
     e1e:	ef 90       	pop	r14
     e20:	08 95       	ret

00000e22 <dtoa_prf>:
     e22:	a9 e0       	ldi	r26, 0x09	; 9
     e24:	b0 e0       	ldi	r27, 0x00	; 0
     e26:	e7 e1       	ldi	r30, 0x17	; 23
     e28:	f7 e0       	ldi	r31, 0x07	; 7
     e2a:	0c 94 49 09 	jmp	0x1292	; 0x1292 <__prologue_saves__+0xc>
     e2e:	6a 01       	movw	r12, r20
     e30:	12 2f       	mov	r17, r18
     e32:	b0 2e       	mov	r11, r16
     e34:	2b e3       	ldi	r18, 0x3B	; 59
     e36:	20 17       	cp	r18, r16
     e38:	20 f0       	brcs	.+8      	; 0xe42 <dtoa_prf+0x20>
     e3a:	ff 24       	eor	r15, r15
     e3c:	f3 94       	inc	r15
     e3e:	f0 0e       	add	r15, r16
     e40:	02 c0       	rjmp	.+4      	; 0xe46 <dtoa_prf+0x24>
     e42:	2c e3       	ldi	r18, 0x3C	; 60
     e44:	f2 2e       	mov	r15, r18
     e46:	0f 2d       	mov	r16, r15
     e48:	27 e0       	ldi	r18, 0x07	; 7
     e4a:	ae 01       	movw	r20, r28
     e4c:	4f 5f       	subi	r20, 0xFF	; 255
     e4e:	5f 4f       	sbci	r21, 0xFF	; 255
     e50:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <__ftoa_engine>
     e54:	bc 01       	movw	r22, r24
     e56:	49 81       	ldd	r20, Y+1	; 0x01
     e58:	84 2f       	mov	r24, r20
     e5a:	89 70       	andi	r24, 0x09	; 9
     e5c:	81 30       	cpi	r24, 0x01	; 1
     e5e:	31 f0       	breq	.+12     	; 0xe6c <dtoa_prf+0x4a>
     e60:	e1 fc       	sbrc	r14, 1
     e62:	06 c0       	rjmp	.+12     	; 0xe70 <dtoa_prf+0x4e>
     e64:	e0 fe       	sbrs	r14, 0
     e66:	06 c0       	rjmp	.+12     	; 0xe74 <dtoa_prf+0x52>
     e68:	90 e2       	ldi	r25, 0x20	; 32
     e6a:	05 c0       	rjmp	.+10     	; 0xe76 <dtoa_prf+0x54>
     e6c:	9d e2       	ldi	r25, 0x2D	; 45
     e6e:	03 c0       	rjmp	.+6      	; 0xe76 <dtoa_prf+0x54>
     e70:	9b e2       	ldi	r25, 0x2B	; 43
     e72:	01 c0       	rjmp	.+2      	; 0xe76 <dtoa_prf+0x54>
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	5e 2d       	mov	r21, r14
     e78:	50 71       	andi	r21, 0x10	; 16
     e7a:	43 ff       	sbrs	r20, 3
     e7c:	3c c0       	rjmp	.+120    	; 0xef6 <dtoa_prf+0xd4>
     e7e:	91 11       	cpse	r25, r1
     e80:	02 c0       	rjmp	.+4      	; 0xe86 <dtoa_prf+0x64>
     e82:	83 e0       	ldi	r24, 0x03	; 3
     e84:	01 c0       	rjmp	.+2      	; 0xe88 <dtoa_prf+0x66>
     e86:	84 e0       	ldi	r24, 0x04	; 4
     e88:	81 17       	cp	r24, r17
     e8a:	18 f4       	brcc	.+6      	; 0xe92 <dtoa_prf+0x70>
     e8c:	21 2f       	mov	r18, r17
     e8e:	28 1b       	sub	r18, r24
     e90:	01 c0       	rjmp	.+2      	; 0xe94 <dtoa_prf+0x72>
     e92:	20 e0       	ldi	r18, 0x00	; 0
     e94:	51 11       	cpse	r21, r1
     e96:	0b c0       	rjmp	.+22     	; 0xeae <dtoa_prf+0x8c>
     e98:	f6 01       	movw	r30, r12
     e9a:	82 2f       	mov	r24, r18
     e9c:	30 e2       	ldi	r19, 0x20	; 32
     e9e:	88 23       	and	r24, r24
     ea0:	19 f0       	breq	.+6      	; 0xea8 <dtoa_prf+0x86>
     ea2:	31 93       	st	Z+, r19
     ea4:	81 50       	subi	r24, 0x01	; 1
     ea6:	fb cf       	rjmp	.-10     	; 0xe9e <dtoa_prf+0x7c>
     ea8:	c2 0e       	add	r12, r18
     eaa:	d1 1c       	adc	r13, r1
     eac:	20 e0       	ldi	r18, 0x00	; 0
     eae:	99 23       	and	r25, r25
     eb0:	29 f0       	breq	.+10     	; 0xebc <dtoa_prf+0x9a>
     eb2:	d6 01       	movw	r26, r12
     eb4:	9c 93       	st	X, r25
     eb6:	f6 01       	movw	r30, r12
     eb8:	31 96       	adiw	r30, 0x01	; 1
     eba:	6f 01       	movw	r12, r30
     ebc:	c6 01       	movw	r24, r12
     ebe:	03 96       	adiw	r24, 0x03	; 3
     ec0:	e2 fe       	sbrs	r14, 2
     ec2:	0a c0       	rjmp	.+20     	; 0xed8 <dtoa_prf+0xb6>
     ec4:	3e e4       	ldi	r19, 0x4E	; 78
     ec6:	d6 01       	movw	r26, r12
     ec8:	3c 93       	st	X, r19
     eca:	41 e4       	ldi	r20, 0x41	; 65
     ecc:	11 96       	adiw	r26, 0x01	; 1
     ece:	4c 93       	st	X, r20
     ed0:	11 97       	sbiw	r26, 0x01	; 1
     ed2:	12 96       	adiw	r26, 0x02	; 2
     ed4:	3c 93       	st	X, r19
     ed6:	06 c0       	rjmp	.+12     	; 0xee4 <dtoa_prf+0xc2>
     ed8:	3e e6       	ldi	r19, 0x6E	; 110
     eda:	f6 01       	movw	r30, r12
     edc:	30 83       	st	Z, r19
     ede:	41 e6       	ldi	r20, 0x61	; 97
     ee0:	41 83       	std	Z+1, r20	; 0x01
     ee2:	32 83       	std	Z+2, r19	; 0x02
     ee4:	fc 01       	movw	r30, r24
     ee6:	32 2f       	mov	r19, r18
     ee8:	40 e2       	ldi	r20, 0x20	; 32
     eea:	33 23       	and	r19, r19
     eec:	09 f4       	brne	.+2      	; 0xef0 <dtoa_prf+0xce>
     eee:	42 c0       	rjmp	.+132    	; 0xf74 <dtoa_prf+0x152>
     ef0:	41 93       	st	Z+, r20
     ef2:	31 50       	subi	r19, 0x01	; 1
     ef4:	fa cf       	rjmp	.-12     	; 0xeea <dtoa_prf+0xc8>
     ef6:	42 ff       	sbrs	r20, 2
     ef8:	44 c0       	rjmp	.+136    	; 0xf82 <dtoa_prf+0x160>
     efa:	91 11       	cpse	r25, r1
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <dtoa_prf+0xe0>
     efe:	83 e0       	ldi	r24, 0x03	; 3
     f00:	01 c0       	rjmp	.+2      	; 0xf04 <dtoa_prf+0xe2>
     f02:	84 e0       	ldi	r24, 0x04	; 4
     f04:	81 17       	cp	r24, r17
     f06:	18 f4       	brcc	.+6      	; 0xf0e <dtoa_prf+0xec>
     f08:	21 2f       	mov	r18, r17
     f0a:	28 1b       	sub	r18, r24
     f0c:	01 c0       	rjmp	.+2      	; 0xf10 <dtoa_prf+0xee>
     f0e:	20 e0       	ldi	r18, 0x00	; 0
     f10:	51 11       	cpse	r21, r1
     f12:	0b c0       	rjmp	.+22     	; 0xf2a <dtoa_prf+0x108>
     f14:	f6 01       	movw	r30, r12
     f16:	82 2f       	mov	r24, r18
     f18:	30 e2       	ldi	r19, 0x20	; 32
     f1a:	88 23       	and	r24, r24
     f1c:	19 f0       	breq	.+6      	; 0xf24 <dtoa_prf+0x102>
     f1e:	31 93       	st	Z+, r19
     f20:	81 50       	subi	r24, 0x01	; 1
     f22:	fb cf       	rjmp	.-10     	; 0xf1a <dtoa_prf+0xf8>
     f24:	c2 0e       	add	r12, r18
     f26:	d1 1c       	adc	r13, r1
     f28:	20 e0       	ldi	r18, 0x00	; 0
     f2a:	99 23       	and	r25, r25
     f2c:	29 f0       	breq	.+10     	; 0xf38 <dtoa_prf+0x116>
     f2e:	d6 01       	movw	r26, r12
     f30:	9c 93       	st	X, r25
     f32:	f6 01       	movw	r30, r12
     f34:	31 96       	adiw	r30, 0x01	; 1
     f36:	6f 01       	movw	r12, r30
     f38:	c6 01       	movw	r24, r12
     f3a:	03 96       	adiw	r24, 0x03	; 3
     f3c:	e2 fe       	sbrs	r14, 2
     f3e:	0b c0       	rjmp	.+22     	; 0xf56 <dtoa_prf+0x134>
     f40:	39 e4       	ldi	r19, 0x49	; 73
     f42:	d6 01       	movw	r26, r12
     f44:	3c 93       	st	X, r19
     f46:	3e e4       	ldi	r19, 0x4E	; 78
     f48:	11 96       	adiw	r26, 0x01	; 1
     f4a:	3c 93       	st	X, r19
     f4c:	11 97       	sbiw	r26, 0x01	; 1
     f4e:	36 e4       	ldi	r19, 0x46	; 70
     f50:	12 96       	adiw	r26, 0x02	; 2
     f52:	3c 93       	st	X, r19
     f54:	07 c0       	rjmp	.+14     	; 0xf64 <dtoa_prf+0x142>
     f56:	39 e6       	ldi	r19, 0x69	; 105
     f58:	f6 01       	movw	r30, r12
     f5a:	30 83       	st	Z, r19
     f5c:	3e e6       	ldi	r19, 0x6E	; 110
     f5e:	31 83       	std	Z+1, r19	; 0x01
     f60:	36 e6       	ldi	r19, 0x66	; 102
     f62:	32 83       	std	Z+2, r19	; 0x02
     f64:	fc 01       	movw	r30, r24
     f66:	32 2f       	mov	r19, r18
     f68:	40 e2       	ldi	r20, 0x20	; 32
     f6a:	33 23       	and	r19, r19
     f6c:	19 f0       	breq	.+6      	; 0xf74 <dtoa_prf+0x152>
     f6e:	41 93       	st	Z+, r20
     f70:	31 50       	subi	r19, 0x01	; 1
     f72:	fb cf       	rjmp	.-10     	; 0xf6a <dtoa_prf+0x148>
     f74:	fc 01       	movw	r30, r24
     f76:	e2 0f       	add	r30, r18
     f78:	f1 1d       	adc	r31, r1
     f7a:	10 82       	st	Z, r1
     f7c:	8e ef       	ldi	r24, 0xFE	; 254
     f7e:	9f ef       	ldi	r25, 0xFF	; 255
     f80:	a6 c0       	rjmp	.+332    	; 0x10ce <dtoa_prf+0x2ac>
     f82:	21 e0       	ldi	r18, 0x01	; 1
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	91 11       	cpse	r25, r1
     f88:	02 c0       	rjmp	.+4      	; 0xf8e <dtoa_prf+0x16c>
     f8a:	20 e0       	ldi	r18, 0x00	; 0
     f8c:	30 e0       	ldi	r19, 0x00	; 0
     f8e:	16 16       	cp	r1, r22
     f90:	17 06       	cpc	r1, r23
     f92:	1c f4       	brge	.+6      	; 0xf9a <dtoa_prf+0x178>
     f94:	fb 01       	movw	r30, r22
     f96:	31 96       	adiw	r30, 0x01	; 1
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <dtoa_prf+0x17c>
     f9a:	e1 e0       	ldi	r30, 0x01	; 1
     f9c:	f0 e0       	ldi	r31, 0x00	; 0
     f9e:	2e 0f       	add	r18, r30
     fa0:	3f 1f       	adc	r19, r31
     fa2:	bb 20       	and	r11, r11
     fa4:	21 f0       	breq	.+8      	; 0xfae <dtoa_prf+0x18c>
     fa6:	eb 2d       	mov	r30, r11
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	31 96       	adiw	r30, 0x01	; 1
     fac:	02 c0       	rjmp	.+4      	; 0xfb2 <dtoa_prf+0x190>
     fae:	e0 e0       	ldi	r30, 0x00	; 0
     fb0:	f0 e0       	ldi	r31, 0x00	; 0
     fb2:	2e 0f       	add	r18, r30
     fb4:	3f 1f       	adc	r19, r31
     fb6:	e1 2f       	mov	r30, r17
     fb8:	f0 e0       	ldi	r31, 0x00	; 0
     fba:	2e 17       	cp	r18, r30
     fbc:	3f 07       	cpc	r19, r31
     fbe:	1c f4       	brge	.+6      	; 0xfc6 <dtoa_prf+0x1a4>
     fc0:	12 1b       	sub	r17, r18
     fc2:	21 2f       	mov	r18, r17
     fc4:	01 c0       	rjmp	.+2      	; 0xfc8 <dtoa_prf+0x1a6>
     fc6:	20 e0       	ldi	r18, 0x00	; 0
     fc8:	8e 2d       	mov	r24, r14
     fca:	88 71       	andi	r24, 0x18	; 24
     fcc:	59 f4       	brne	.+22     	; 0xfe4 <dtoa_prf+0x1c2>
     fce:	f6 01       	movw	r30, r12
     fd0:	82 2f       	mov	r24, r18
     fd2:	30 e2       	ldi	r19, 0x20	; 32
     fd4:	88 23       	and	r24, r24
     fd6:	19 f0       	breq	.+6      	; 0xfde <dtoa_prf+0x1bc>
     fd8:	31 93       	st	Z+, r19
     fda:	81 50       	subi	r24, 0x01	; 1
     fdc:	fb cf       	rjmp	.-10     	; 0xfd4 <dtoa_prf+0x1b2>
     fde:	c2 0e       	add	r12, r18
     fe0:	d1 1c       	adc	r13, r1
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	99 23       	and	r25, r25
     fe6:	29 f0       	breq	.+10     	; 0xff2 <dtoa_prf+0x1d0>
     fe8:	d6 01       	movw	r26, r12
     fea:	9c 93       	st	X, r25
     fec:	f6 01       	movw	r30, r12
     fee:	31 96       	adiw	r30, 0x01	; 1
     ff0:	6f 01       	movw	r12, r30
     ff2:	51 11       	cpse	r21, r1
     ff4:	0b c0       	rjmp	.+22     	; 0x100c <dtoa_prf+0x1ea>
     ff6:	f6 01       	movw	r30, r12
     ff8:	82 2f       	mov	r24, r18
     ffa:	90 e3       	ldi	r25, 0x30	; 48
     ffc:	88 23       	and	r24, r24
     ffe:	19 f0       	breq	.+6      	; 0x1006 <dtoa_prf+0x1e4>
    1000:	91 93       	st	Z+, r25
    1002:	81 50       	subi	r24, 0x01	; 1
    1004:	fb cf       	rjmp	.-10     	; 0xffc <dtoa_prf+0x1da>
    1006:	c2 0e       	add	r12, r18
    1008:	d1 1c       	adc	r13, r1
    100a:	20 e0       	ldi	r18, 0x00	; 0
    100c:	0f 2d       	mov	r16, r15
    100e:	06 0f       	add	r16, r22
    1010:	9a 81       	ldd	r25, Y+2	; 0x02
    1012:	34 2f       	mov	r19, r20
    1014:	30 71       	andi	r19, 0x10	; 16
    1016:	44 ff       	sbrs	r20, 4
    1018:	03 c0       	rjmp	.+6      	; 0x1020 <dtoa_prf+0x1fe>
    101a:	91 33       	cpi	r25, 0x31	; 49
    101c:	09 f4       	brne	.+2      	; 0x1020 <dtoa_prf+0x1fe>
    101e:	01 50       	subi	r16, 0x01	; 1
    1020:	10 16       	cp	r1, r16
    1022:	24 f4       	brge	.+8      	; 0x102c <dtoa_prf+0x20a>
    1024:	09 30       	cpi	r16, 0x09	; 9
    1026:	18 f0       	brcs	.+6      	; 0x102e <dtoa_prf+0x20c>
    1028:	08 e0       	ldi	r16, 0x08	; 8
    102a:	01 c0       	rjmp	.+2      	; 0x102e <dtoa_prf+0x20c>
    102c:	01 e0       	ldi	r16, 0x01	; 1
    102e:	ab 01       	movw	r20, r22
    1030:	77 ff       	sbrs	r23, 7
    1032:	02 c0       	rjmp	.+4      	; 0x1038 <dtoa_prf+0x216>
    1034:	40 e0       	ldi	r20, 0x00	; 0
    1036:	50 e0       	ldi	r21, 0x00	; 0
    1038:	fb 01       	movw	r30, r22
    103a:	e4 1b       	sub	r30, r20
    103c:	f5 0b       	sbc	r31, r21
    103e:	a1 e0       	ldi	r26, 0x01	; 1
    1040:	b0 e0       	ldi	r27, 0x00	; 0
    1042:	ac 0f       	add	r26, r28
    1044:	bd 1f       	adc	r27, r29
    1046:	ea 0f       	add	r30, r26
    1048:	fb 1f       	adc	r31, r27
    104a:	8e e2       	ldi	r24, 0x2E	; 46
    104c:	a8 2e       	mov	r10, r24
    104e:	4b 01       	movw	r8, r22
    1050:	80 1a       	sub	r8, r16
    1052:	91 08       	sbc	r9, r1
    1054:	0b 2d       	mov	r16, r11
    1056:	10 e0       	ldi	r17, 0x00	; 0
    1058:	11 95       	neg	r17
    105a:	01 95       	neg	r16
    105c:	11 09       	sbc	r17, r1
    105e:	4f 3f       	cpi	r20, 0xFF	; 255
    1060:	bf ef       	ldi	r27, 0xFF	; 255
    1062:	5b 07       	cpc	r21, r27
    1064:	21 f4       	brne	.+8      	; 0x106e <dtoa_prf+0x24c>
    1066:	d6 01       	movw	r26, r12
    1068:	ac 92       	st	X, r10
    106a:	11 96       	adiw	r26, 0x01	; 1
    106c:	6d 01       	movw	r12, r26
    106e:	64 17       	cp	r22, r20
    1070:	75 07       	cpc	r23, r21
    1072:	2c f0       	brlt	.+10     	; 0x107e <dtoa_prf+0x25c>
    1074:	84 16       	cp	r8, r20
    1076:	95 06       	cpc	r9, r21
    1078:	14 f4       	brge	.+4      	; 0x107e <dtoa_prf+0x25c>
    107a:	81 81       	ldd	r24, Z+1	; 0x01
    107c:	01 c0       	rjmp	.+2      	; 0x1080 <dtoa_prf+0x25e>
    107e:	80 e3       	ldi	r24, 0x30	; 48
    1080:	41 50       	subi	r20, 0x01	; 1
    1082:	51 09       	sbc	r21, r1
    1084:	31 96       	adiw	r30, 0x01	; 1
    1086:	d6 01       	movw	r26, r12
    1088:	11 96       	adiw	r26, 0x01	; 1
    108a:	7d 01       	movw	r14, r26
    108c:	40 17       	cp	r20, r16
    108e:	51 07       	cpc	r21, r17
    1090:	24 f0       	brlt	.+8      	; 0x109a <dtoa_prf+0x278>
    1092:	d6 01       	movw	r26, r12
    1094:	8c 93       	st	X, r24
    1096:	67 01       	movw	r12, r14
    1098:	e2 cf       	rjmp	.-60     	; 0x105e <dtoa_prf+0x23c>
    109a:	64 17       	cp	r22, r20
    109c:	75 07       	cpc	r23, r21
    109e:	39 f4       	brne	.+14     	; 0x10ae <dtoa_prf+0x28c>
    10a0:	96 33       	cpi	r25, 0x36	; 54
    10a2:	20 f4       	brcc	.+8      	; 0x10ac <dtoa_prf+0x28a>
    10a4:	95 33       	cpi	r25, 0x35	; 53
    10a6:	19 f4       	brne	.+6      	; 0x10ae <dtoa_prf+0x28c>
    10a8:	31 11       	cpse	r19, r1
    10aa:	01 c0       	rjmp	.+2      	; 0x10ae <dtoa_prf+0x28c>
    10ac:	81 e3       	ldi	r24, 0x31	; 49
    10ae:	f6 01       	movw	r30, r12
    10b0:	80 83       	st	Z, r24
    10b2:	f7 01       	movw	r30, r14
    10b4:	82 2f       	mov	r24, r18
    10b6:	90 e2       	ldi	r25, 0x20	; 32
    10b8:	88 23       	and	r24, r24
    10ba:	19 f0       	breq	.+6      	; 0x10c2 <dtoa_prf+0x2a0>
    10bc:	91 93       	st	Z+, r25
    10be:	81 50       	subi	r24, 0x01	; 1
    10c0:	fb cf       	rjmp	.-10     	; 0x10b8 <dtoa_prf+0x296>
    10c2:	f7 01       	movw	r30, r14
    10c4:	e2 0f       	add	r30, r18
    10c6:	f1 1d       	adc	r31, r1
    10c8:	10 82       	st	Z, r1
    10ca:	80 e0       	ldi	r24, 0x00	; 0
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	29 96       	adiw	r28, 0x09	; 9
    10d0:	ec e0       	ldi	r30, 0x0C	; 12
    10d2:	0c 94 65 09 	jmp	0x12ca	; 0x12ca <__epilogue_restores__+0xc>

000010d6 <__ftoa_engine>:
    10d6:	28 30       	cpi	r18, 0x08	; 8
    10d8:	08 f0       	brcs	.+2      	; 0x10dc <__ftoa_engine+0x6>
    10da:	27 e0       	ldi	r18, 0x07	; 7
    10dc:	33 27       	eor	r19, r19
    10de:	da 01       	movw	r26, r20
    10e0:	99 0f       	add	r25, r25
    10e2:	31 1d       	adc	r19, r1
    10e4:	87 fd       	sbrc	r24, 7
    10e6:	91 60       	ori	r25, 0x01	; 1
    10e8:	00 96       	adiw	r24, 0x00	; 0
    10ea:	61 05       	cpc	r22, r1
    10ec:	71 05       	cpc	r23, r1
    10ee:	39 f4       	brne	.+14     	; 0x10fe <__ftoa_engine+0x28>
    10f0:	32 60       	ori	r19, 0x02	; 2
    10f2:	2e 5f       	subi	r18, 0xFE	; 254
    10f4:	3d 93       	st	X+, r19
    10f6:	30 e3       	ldi	r19, 0x30	; 48
    10f8:	2a 95       	dec	r18
    10fa:	e1 f7       	brne	.-8      	; 0x10f4 <__ftoa_engine+0x1e>
    10fc:	08 95       	ret
    10fe:	9f 3f       	cpi	r25, 0xFF	; 255
    1100:	30 f0       	brcs	.+12     	; 0x110e <__ftoa_engine+0x38>
    1102:	80 38       	cpi	r24, 0x80	; 128
    1104:	71 05       	cpc	r23, r1
    1106:	61 05       	cpc	r22, r1
    1108:	09 f0       	breq	.+2      	; 0x110c <__ftoa_engine+0x36>
    110a:	3c 5f       	subi	r19, 0xFC	; 252
    110c:	3c 5f       	subi	r19, 0xFC	; 252
    110e:	3d 93       	st	X+, r19
    1110:	91 30       	cpi	r25, 0x01	; 1
    1112:	08 f0       	brcs	.+2      	; 0x1116 <__ftoa_engine+0x40>
    1114:	80 68       	ori	r24, 0x80	; 128
    1116:	91 1d       	adc	r25, r1
    1118:	df 93       	push	r29
    111a:	cf 93       	push	r28
    111c:	1f 93       	push	r17
    111e:	0f 93       	push	r16
    1120:	ff 92       	push	r15
    1122:	ef 92       	push	r14
    1124:	19 2f       	mov	r17, r25
    1126:	98 7f       	andi	r25, 0xF8	; 248
    1128:	96 95       	lsr	r25
    112a:	e9 2f       	mov	r30, r25
    112c:	96 95       	lsr	r25
    112e:	96 95       	lsr	r25
    1130:	e9 0f       	add	r30, r25
    1132:	ff 27       	eor	r31, r31
    1134:	e2 55       	subi	r30, 0x52	; 82
    1136:	ff 4f       	sbci	r31, 0xFF	; 255
    1138:	99 27       	eor	r25, r25
    113a:	33 27       	eor	r19, r19
    113c:	ee 24       	eor	r14, r14
    113e:	ff 24       	eor	r15, r15
    1140:	a7 01       	movw	r20, r14
    1142:	e7 01       	movw	r28, r14
    1144:	05 90       	lpm	r0, Z+
    1146:	08 94       	sec
    1148:	07 94       	ror	r0
    114a:	28 f4       	brcc	.+10     	; 0x1156 <__ftoa_engine+0x80>
    114c:	36 0f       	add	r19, r22
    114e:	e7 1e       	adc	r14, r23
    1150:	f8 1e       	adc	r15, r24
    1152:	49 1f       	adc	r20, r25
    1154:	51 1d       	adc	r21, r1
    1156:	66 0f       	add	r22, r22
    1158:	77 1f       	adc	r23, r23
    115a:	88 1f       	adc	r24, r24
    115c:	99 1f       	adc	r25, r25
    115e:	06 94       	lsr	r0
    1160:	a1 f7       	brne	.-24     	; 0x114a <__ftoa_engine+0x74>
    1162:	05 90       	lpm	r0, Z+
    1164:	07 94       	ror	r0
    1166:	28 f4       	brcc	.+10     	; 0x1172 <__ftoa_engine+0x9c>
    1168:	e7 0e       	add	r14, r23
    116a:	f8 1e       	adc	r15, r24
    116c:	49 1f       	adc	r20, r25
    116e:	56 1f       	adc	r21, r22
    1170:	c1 1d       	adc	r28, r1
    1172:	77 0f       	add	r23, r23
    1174:	88 1f       	adc	r24, r24
    1176:	99 1f       	adc	r25, r25
    1178:	66 1f       	adc	r22, r22
    117a:	06 94       	lsr	r0
    117c:	a1 f7       	brne	.-24     	; 0x1166 <__ftoa_engine+0x90>
    117e:	05 90       	lpm	r0, Z+
    1180:	07 94       	ror	r0
    1182:	28 f4       	brcc	.+10     	; 0x118e <__ftoa_engine+0xb8>
    1184:	f8 0e       	add	r15, r24
    1186:	49 1f       	adc	r20, r25
    1188:	56 1f       	adc	r21, r22
    118a:	c7 1f       	adc	r28, r23
    118c:	d1 1d       	adc	r29, r1
    118e:	88 0f       	add	r24, r24
    1190:	99 1f       	adc	r25, r25
    1192:	66 1f       	adc	r22, r22
    1194:	77 1f       	adc	r23, r23
    1196:	06 94       	lsr	r0
    1198:	a1 f7       	brne	.-24     	; 0x1182 <__ftoa_engine+0xac>
    119a:	05 90       	lpm	r0, Z+
    119c:	07 94       	ror	r0
    119e:	20 f4       	brcc	.+8      	; 0x11a8 <__ftoa_engine+0xd2>
    11a0:	49 0f       	add	r20, r25
    11a2:	56 1f       	adc	r21, r22
    11a4:	c7 1f       	adc	r28, r23
    11a6:	d8 1f       	adc	r29, r24
    11a8:	99 0f       	add	r25, r25
    11aa:	66 1f       	adc	r22, r22
    11ac:	77 1f       	adc	r23, r23
    11ae:	88 1f       	adc	r24, r24
    11b0:	06 94       	lsr	r0
    11b2:	a9 f7       	brne	.-22     	; 0x119e <__ftoa_engine+0xc8>
    11b4:	84 91       	lpm	r24, Z
    11b6:	10 95       	com	r17
    11b8:	17 70       	andi	r17, 0x07	; 7
    11ba:	41 f0       	breq	.+16     	; 0x11cc <__ftoa_engine+0xf6>
    11bc:	d6 95       	lsr	r29
    11be:	c7 95       	ror	r28
    11c0:	57 95       	ror	r21
    11c2:	47 95       	ror	r20
    11c4:	f7 94       	ror	r15
    11c6:	e7 94       	ror	r14
    11c8:	1a 95       	dec	r17
    11ca:	c1 f7       	brne	.-16     	; 0x11bc <__ftoa_engine+0xe6>
    11cc:	e4 e5       	ldi	r30, 0x54	; 84
    11ce:	f0 e0       	ldi	r31, 0x00	; 0
    11d0:	68 94       	set
    11d2:	15 90       	lpm	r1, Z+
    11d4:	15 91       	lpm	r17, Z+
    11d6:	35 91       	lpm	r19, Z+
    11d8:	65 91       	lpm	r22, Z+
    11da:	95 91       	lpm	r25, Z+
    11dc:	05 90       	lpm	r0, Z+
    11de:	7f e2       	ldi	r23, 0x2F	; 47
    11e0:	73 95       	inc	r23
    11e2:	e1 18       	sub	r14, r1
    11e4:	f1 0a       	sbc	r15, r17
    11e6:	43 0b       	sbc	r20, r19
    11e8:	56 0b       	sbc	r21, r22
    11ea:	c9 0b       	sbc	r28, r25
    11ec:	d0 09       	sbc	r29, r0
    11ee:	c0 f7       	brcc	.-16     	; 0x11e0 <__ftoa_engine+0x10a>
    11f0:	e1 0c       	add	r14, r1
    11f2:	f1 1e       	adc	r15, r17
    11f4:	43 1f       	adc	r20, r19
    11f6:	56 1f       	adc	r21, r22
    11f8:	c9 1f       	adc	r28, r25
    11fa:	d0 1d       	adc	r29, r0
    11fc:	7e f4       	brtc	.+30     	; 0x121c <__ftoa_engine+0x146>
    11fe:	70 33       	cpi	r23, 0x30	; 48
    1200:	11 f4       	brne	.+4      	; 0x1206 <__ftoa_engine+0x130>
    1202:	8a 95       	dec	r24
    1204:	e6 cf       	rjmp	.-52     	; 0x11d2 <__ftoa_engine+0xfc>
    1206:	e8 94       	clt
    1208:	01 50       	subi	r16, 0x01	; 1
    120a:	30 f0       	brcs	.+12     	; 0x1218 <__ftoa_engine+0x142>
    120c:	08 0f       	add	r16, r24
    120e:	0a f4       	brpl	.+2      	; 0x1212 <__ftoa_engine+0x13c>
    1210:	00 27       	eor	r16, r16
    1212:	02 17       	cp	r16, r18
    1214:	08 f4       	brcc	.+2      	; 0x1218 <__ftoa_engine+0x142>
    1216:	20 2f       	mov	r18, r16
    1218:	23 95       	inc	r18
    121a:	02 2f       	mov	r16, r18
    121c:	7a 33       	cpi	r23, 0x3A	; 58
    121e:	28 f0       	brcs	.+10     	; 0x122a <__ftoa_engine+0x154>
    1220:	79 e3       	ldi	r23, 0x39	; 57
    1222:	7d 93       	st	X+, r23
    1224:	2a 95       	dec	r18
    1226:	e9 f7       	brne	.-6      	; 0x1222 <__ftoa_engine+0x14c>
    1228:	10 c0       	rjmp	.+32     	; 0x124a <__ftoa_engine+0x174>
    122a:	7d 93       	st	X+, r23
    122c:	2a 95       	dec	r18
    122e:	89 f6       	brne	.-94     	; 0x11d2 <__ftoa_engine+0xfc>
    1230:	06 94       	lsr	r0
    1232:	97 95       	ror	r25
    1234:	67 95       	ror	r22
    1236:	37 95       	ror	r19
    1238:	17 95       	ror	r17
    123a:	17 94       	ror	r1
    123c:	e1 18       	sub	r14, r1
    123e:	f1 0a       	sbc	r15, r17
    1240:	43 0b       	sbc	r20, r19
    1242:	56 0b       	sbc	r21, r22
    1244:	c9 0b       	sbc	r28, r25
    1246:	d0 09       	sbc	r29, r0
    1248:	98 f0       	brcs	.+38     	; 0x1270 <__ftoa_engine+0x19a>
    124a:	23 95       	inc	r18
    124c:	7e 91       	ld	r23, -X
    124e:	73 95       	inc	r23
    1250:	7a 33       	cpi	r23, 0x3A	; 58
    1252:	08 f0       	brcs	.+2      	; 0x1256 <__ftoa_engine+0x180>
    1254:	70 e3       	ldi	r23, 0x30	; 48
    1256:	7c 93       	st	X, r23
    1258:	20 13       	cpse	r18, r16
    125a:	b8 f7       	brcc	.-18     	; 0x124a <__ftoa_engine+0x174>
    125c:	7e 91       	ld	r23, -X
    125e:	70 61       	ori	r23, 0x10	; 16
    1260:	7d 93       	st	X+, r23
    1262:	30 f0       	brcs	.+12     	; 0x1270 <__ftoa_engine+0x19a>
    1264:	83 95       	inc	r24
    1266:	71 e3       	ldi	r23, 0x31	; 49
    1268:	7d 93       	st	X+, r23
    126a:	70 e3       	ldi	r23, 0x30	; 48
    126c:	2a 95       	dec	r18
    126e:	e1 f7       	brne	.-8      	; 0x1268 <__ftoa_engine+0x192>
    1270:	11 24       	eor	r1, r1
    1272:	ef 90       	pop	r14
    1274:	ff 90       	pop	r15
    1276:	0f 91       	pop	r16
    1278:	1f 91       	pop	r17
    127a:	cf 91       	pop	r28
    127c:	df 91       	pop	r29
    127e:	99 27       	eor	r25, r25
    1280:	87 fd       	sbrc	r24, 7
    1282:	90 95       	com	r25
    1284:	08 95       	ret

00001286 <__prologue_saves__>:
    1286:	2f 92       	push	r2
    1288:	3f 92       	push	r3
    128a:	4f 92       	push	r4
    128c:	5f 92       	push	r5
    128e:	6f 92       	push	r6
    1290:	7f 92       	push	r7
    1292:	8f 92       	push	r8
    1294:	9f 92       	push	r9
    1296:	af 92       	push	r10
    1298:	bf 92       	push	r11
    129a:	cf 92       	push	r12
    129c:	df 92       	push	r13
    129e:	ef 92       	push	r14
    12a0:	ff 92       	push	r15
    12a2:	0f 93       	push	r16
    12a4:	1f 93       	push	r17
    12a6:	cf 93       	push	r28
    12a8:	df 93       	push	r29
    12aa:	cd b7       	in	r28, 0x3d	; 61
    12ac:	de b7       	in	r29, 0x3e	; 62
    12ae:	ca 1b       	sub	r28, r26
    12b0:	db 0b       	sbc	r29, r27
    12b2:	0f b6       	in	r0, 0x3f	; 63
    12b4:	f8 94       	cli
    12b6:	de bf       	out	0x3e, r29	; 62
    12b8:	0f be       	out	0x3f, r0	; 63
    12ba:	cd bf       	out	0x3d, r28	; 61
    12bc:	09 94       	ijmp

000012be <__epilogue_restores__>:
    12be:	2a 88       	ldd	r2, Y+18	; 0x12
    12c0:	39 88       	ldd	r3, Y+17	; 0x11
    12c2:	48 88       	ldd	r4, Y+16	; 0x10
    12c4:	5f 84       	ldd	r5, Y+15	; 0x0f
    12c6:	6e 84       	ldd	r6, Y+14	; 0x0e
    12c8:	7d 84       	ldd	r7, Y+13	; 0x0d
    12ca:	8c 84       	ldd	r8, Y+12	; 0x0c
    12cc:	9b 84       	ldd	r9, Y+11	; 0x0b
    12ce:	aa 84       	ldd	r10, Y+10	; 0x0a
    12d0:	b9 84       	ldd	r11, Y+9	; 0x09
    12d2:	c8 84       	ldd	r12, Y+8	; 0x08
    12d4:	df 80       	ldd	r13, Y+7	; 0x07
    12d6:	ee 80       	ldd	r14, Y+6	; 0x06
    12d8:	fd 80       	ldd	r15, Y+5	; 0x05
    12da:	0c 81       	ldd	r16, Y+4	; 0x04
    12dc:	1b 81       	ldd	r17, Y+3	; 0x03
    12de:	aa 81       	ldd	r26, Y+2	; 0x02
    12e0:	b9 81       	ldd	r27, Y+1	; 0x01
    12e2:	ce 0f       	add	r28, r30
    12e4:	d1 1d       	adc	r29, r1
    12e6:	0f b6       	in	r0, 0x3f	; 63
    12e8:	f8 94       	cli
    12ea:	de bf       	out	0x3e, r29	; 62
    12ec:	0f be       	out	0x3f, r0	; 63
    12ee:	cd bf       	out	0x3d, r28	; 61
    12f0:	ed 01       	movw	r28, r26
    12f2:	08 95       	ret

000012f4 <_exit>:
    12f4:	f8 94       	cli

000012f6 <__stop_program>:
    12f6:	ff cf       	rjmp	.-2      	; 0x12f6 <__stop_program>
